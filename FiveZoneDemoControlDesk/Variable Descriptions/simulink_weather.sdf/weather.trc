-- ***************************************************************************
-- Trace file: weather.trc
--
-- Generated on 11/25/2021 17:59:36
-- Generated by dSPACE VDFGenerator
--
-- Copyright 2021, dSPACE GmbH. All rights reserved.
--
-- ***************************************************************************

-- Default data type formats
_floating_point_type(64,IEEE)
_integer_type(32)


sampling_period[0]
{
  value:       0.01
  alias:       "Periodic Task 1"
  unit:        "s"
}


-- ******** Simulation and RTOS variables *************************************

group "Simulation and RTOS"
	
	group "Task Information Variables"
		
		group "Periodic Task 1"
			Periodic_Task_1Vars_Calls
			{
			 type:    uint(64)
			 alias:   "Task Call Counter"
			 flags:   OUTPUT|READONLY
			 range:   <0; 18446744073709551615>
			 desc:    "Periodic Task 1 [0.01]"
			 addr:    0x08139F8C
			}
			Periodic_Task_1Vars_TurnaroundTime
			{
			 type:    flt(64,IEEE)
			 alias:   "Task Turnaround Time"
			 flags:   OUTPUT|READONLY
			 desc:    "Periodic Task 1 [0.01]"
			 addr:    0x08139F84
			}
			Periodic_Task_1Vars_OvnCounter
			{
			 type:    uint(32)
			 alias:   "Overrun Count"
			 flags:   OUTPUT|READONLY
			 desc:    "Periodic Task 1 [0.01]"
			 addr:    0x08139F80
			}
		
		endgroup -- "Periodic Task 1"
	
	endgroup -- "Task Information Variables"
	
	group "Application Startup Variables"
		ScaledTimeInterval
		{
		 type:    flt(64,IEEE)
		 alias:   "Scaled Time Interval"
		 flags:   PARAM
		 range:   <0; inf>
		 value:   0
		 addr:    0x08139FC8
		}
		ScalingFactor
		{
		 type:    flt(64,IEEE)
		 alias:   "Scaling Factor"
		 flags:   PARAM
		 range:   <1; inf>
		 value:   1
		 addr:    0x0805A178
		}
	
	endgroup -- "Application Startup Variables"

endgroup -- "Simulation and RTOS"


-- ****************************************************************************
--
--  Trace file: weather.trc
--
--  4.3 (02-May-2020)
--  Thu Nov 25 17:30:34 2021
--
--  Copyright 2021, dSPACE GmbH. All rights reserved.
--
-- ****************************************************************************



-- Type definitions for arrays
typedef weather_ArrayDT0_27 flt(64,IEEE)[27]
typedef weather_ArrayDT0_2 flt(64,IEEE)[2]
typedef weather_ArrayDT0_4081 flt(64,IEEE)[4081]
typedef weather_ArrayDT0_138 flt(64,IEEE)[138]


-- ******** Model variables ***************************************************

group "Model Root"
  
  
	group "behavior" -- subsystem-group

		p_0_weather_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TOut_V"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "t"
		 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
		p_0_weather_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TOut"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "RH"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[5]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_TDryBul"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "RHOut_V"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[6]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_relHum"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[7]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HDifHor"
		 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
		p_0_weather_real_T_0[8]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HDirNor"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[9]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HGloHor"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[10]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HHorIR"
		 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
		p_0_weather_real_T_0[11]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_TBlaSky"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[12]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_TDewPoi"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[13]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_ceiHei"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[14]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_cloTim"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[15]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_lat"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[16]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_lon"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[17]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_nOpa"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[18]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_nTot"
		 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
		p_0_weather_real_T_0[19]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_pAtm"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[20]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solAlt"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[21]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solDec"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[22]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solHouAng"
		 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
		p_0_weather_real_T_0[23]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solTim"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[24]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solZen"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[25]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_winDir"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
		p_0_weather_real_T_0[26]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_winSpe"
		 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}


  
  
		group "DymolaBlock" -- subsystem-group

			p_0_weather_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TOut_V"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[1]
			{
			 type:    flt(64,IEEE)*
			 alias:   "RHOut_V"
			 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
			p_0_weather_real_T_0[2]
			{
			 type:    flt(64,IEEE)*
			 alias:   "t"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[3]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TOut"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[4]
			{
			 type:    flt(64,IEEE)*
			 alias:   "RH"
			 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
			p_0_weather_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_TDryBul"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[6]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_relHum"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HDifHor"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HDirNor"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HGloHor"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HHorIR"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_TBlaSky"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[12]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_TDewPoi"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[13]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_ceiHei"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[14]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_cloTim"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[15]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_lat"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[16]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_lon"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_nOpa"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_nTot"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_pAtm"
			 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
			p_0_weather_real_T_0[20]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solAlt"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[21]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solDec"
			 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
			p_0_weather_real_T_0[22]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solHouAng"
			 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}
			p_0_weather_real_T_0[23]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solTim"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[24]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solZen"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}
			p_0_weather_real_T_0[25]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_winDir"
			 flags:   OUTPUT|READONLY
 addr:    0x0813AC20
}
			p_0_weather_real_T_0[26]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_winSpe"
			 flags:   OUTPUT|READONLY
		 addr:    0x0813AC20
		}


			group "Sfunc" -- block-group
			{
			 block: "S-Function"
			}
				p_0_weather_real_T_0[0]
				{
				 type:    weather_ArrayDT0_27*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
			 addr:    0x0813AC20
			}

				p_1_weather_real_T_0[2]
				{
				 type:    weather_ArrayDT0_4081*
				 alias:   "P1"
				 flags:   PARAM
		 addr:    0x0813AC24
		}


			endgroup -- block-group "Sfunc"

  
  
			group "Dymola Settings" -- subsystem-group





			endgroup -- subsystem-group "Dymola Settings"
  
  
			group "Modelica model2" -- subsystem-group





			endgroup -- subsystem-group "Modelica model2"
  
  
			group "compmodel" -- subsystem-group





			endgroup -- subsystem-group "compmodel"
  
  
			group "editmodel" -- subsystem-group





			endgroup -- subsystem-group "editmodel"


		endgroup -- subsystem-group "DymolaBlock"


	endgroup -- subsystem-group "behavior"
  
  
	group "out" -- subsystem-group



		group "Scope" -- block-group
		{
		 block: "Scope"
		}
			p_0_weather_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "In1"
			 flags:   READONLY
		 addr:    0x0813AC20
		}



		endgroup -- block-group "Scope"

  
  
		group "RH" -- subsystem-group


		endgroup -- subsystem-group "RH"
  
  
		group "TOut" -- subsystem-group


		endgroup -- subsystem-group "TOut"


	endgroup -- subsystem-group "out"



endgroup -- "Model Root"
-- ******** Tunable Parameters ************************************************

group "Tunable Parameters"


endgroup

-- ******** State Machine Data ************************************************

-- No Stateflow chart within the model.


-- ******** Labels ************************************************************

-- Generation of labels turned off with TRCGenerateLabels option.


-- ******** User variables from model_usr.trc *********************************

-- RTI_USR_TRC_BEGIN

-- No user file weather_usr.trc found.

-- RTI_USR_TRC_END

-- ******** [EOF] *************************************************************




-- ******** Diagnostics variables *********************************************

group "Diagnostics"
	pFuseActualStatus
	{
	 type:    uint(32)*
	 alias:   "Fuse Actual Status"
	 flags:   OUTPUT|READONLY
	 range:   <0; 1>
	 desc:    "0 = all fuses are intact, 1 = at least one fuse is open"
	 addr:    0x08139F48
	}
	pFuseRestoreRequest
	{
	 type:    uint(32)*
	 alias:   "Fuse Restore Request"
	 flags:   PARAM
	 range:   <0; 1>
	 value:   0
	 desc:    "If set to 1 all fuses are restored"
	 addr:    0x08139F44
	}
	
	group "Failure Simulation"
		pFailureSimulationClientConnected
		{
		 type:    uint(8)*
		 alias:   "Client connected"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure simulation client connected, 1 = Connection to a failure simulation client established"
 addr:    0x08139F40
}
		pFailureSimulationFailureConfigured
		{
		 type:    uint(8)*
		 alias:   "Failure configured"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure configured, 1 = Failure configured"
 addr:    0x08139F3C
}
		pFailureSimulationFailureActivated
		{
		 type:    uint(8)*
		 alias:   "Failure activated"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure active, 1 = Failure active"
 addr:    0x08139F38
}
		pFailureSimulationSequenceCount
		{
		 type:    uint(16)*
		 alias:   "Failure sequence count"
		 flags:   OUTPUT|READONLY
		 range:   <0; 65535>
		 desc:    "0 = No failure configured, 1..65535 = Failure sequence n is currently active"
	 addr:    0x08139F34
	}
		pFailureSimulationRelaySwitching
		{
		 type:    uint(8)*
		 alias:   "Relay switching"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = Failure simulation system is stable, 1 = Failure simulation system is currently busy. Relay switching in process"
		 addr:    0x08139F30
		}
	
	endgroup -- "Failure Simulation"

endgroup -- "Diagnostics"

-- ******** XIL API variables *************************************************

group "XIL API"
	
	group "EESPort"
		pXilApiEesPortActiveErrorSet
		{
		 type:    uint(32)*
		 alias:   "Active ErrorSet"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    "Index of active ErrorSet or 0 if no ErrorSet is active."
		 addr:    0x08139F2C
		}
		pXilApiEesPortErrorActivated
		{
		 type:    uint(32)*
		 alias:   "Error Activated"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 - no error is activated on hardware, 1 - at least one error is activated on hardware"
		 addr:    0x08139F28
		}
		pXilApiEesPortErrorSwitching
		{
		 type:    uint(32)*
		 alias:   "Error Switching"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 - no switching operation running on hardware, 1 - switching operation running on hardware"
		 addr:    0x08139F24
		}
		xilApiEesPortFlags
		{
		 type:    uint(32)
		 alias:   "Flags"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    ""
		 addr:    0x08139F20
		}
		xilApiEesPortTrigger
		{
		 type:    uint(32)
		 alias:   "Trigger"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    ""
		 addr:    0x08139F1C
		}
	
	endgroup -- "EESPort"

endgroup -- "XIL API"

-- ******** [EOF] *************************************************************


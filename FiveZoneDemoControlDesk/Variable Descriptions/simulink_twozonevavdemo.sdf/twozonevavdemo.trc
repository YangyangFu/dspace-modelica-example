-- ***************************************************************************
-- Trace file: twozonevavdemo.trc
--
-- Generated on 11/17/2021 19:50:19
-- Generated by dSPACE VDFGenerator
--
-- Copyright 2021, dSPACE GmbH. All rights reserved.
--
-- ***************************************************************************

-- Default data type formats
_floating_point_type(64,IEEE)
_integer_type(32)


sampling_period[0]
{
  value:       0.1
  alias:       "Periodic Task 1"
  unit:        "s"
}


-- ******** Simulation and RTOS variables *************************************

group "Simulation and RTOS"
	
	group "Task Information Variables"
		
		group "Periodic Task 1"
			Periodic_Task_1Vars_Calls
			{
			 type:    uint(64)
			 alias:   "Task Call Counter"
			 flags:   OUTPUT|READONLY
			 range:   <0; 18446744073709551615>
			 desc:    "Periodic Task 1 [0.1]"
			 addr:    0x08271C8C
			}
			Periodic_Task_1Vars_TurnaroundTime
			{
			 type:    flt(64,IEEE)
			 alias:   "Task Turnaround Time"
			 flags:   OUTPUT|READONLY
			 desc:    "Periodic Task 1 [0.1]"
			 addr:    0x08271C84
			}
			Periodic_Task_1Vars_OvnCounter
			{
			 type:    uint(32)
			 alias:   "Overrun Count"
			 flags:   OUTPUT|READONLY
			 desc:    "Periodic Task 1 [0.1]"
			 addr:    0x08271C80
			}
		
		endgroup -- "Periodic Task 1"
	
	endgroup -- "Task Information Variables"
	
	group "Application Startup Variables"
		ScaledTimeInterval
		{
		 type:    flt(64,IEEE)
		 alias:   "Scaled Time Interval"
		 flags:   PARAM
		 range:   <0; inf>
		 value:   0
		 addr:    0x08271CC8
		}
		ScalingFactor
		{
		 type:    flt(64,IEEE)
		 alias:   "Scaling Factor"
		 flags:   PARAM
		 range:   <1; inf>
		 value:   1
		 addr:    0x08172178
		}
	
	endgroup -- "Application Startup Variables"

endgroup -- "Simulation and RTOS"


-- ****************************************************************************
--
--  Trace file: twozonevavdemo.trc
--
--  4.3 (02-May-2020)
--  Wed Nov 17 19:49:53 2021
--
--  Copyright 2021, dSPACE GmbH. All rights reserved.
--
-- ****************************************************************************



-- Type definitions for arrays
typedef twozonevavdemo_ArrayDT0_39 flt(64,IEEE)[39]
typedef twozonevavdemo_ArrayDT0_2 flt(64,IEEE)[2]
typedef twozonevavdemo_ArrayDT0_4978 flt(64,IEEE)[4978]
typedef twozonevavdemo_ArrayDT0_108 flt(64,IEEE)[108]
typedef twozonevavdemo_ArrayDT0_19155 flt(64,IEEE)[19155]


-- ******** Model variables ***************************************************

group "Model Root"
  
  
	group "Subsystem" -- subsystem-group

		p_0_twozonevavdemo_real_T_0[8]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TOut"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[9]
		{
		 type:    flt(64,IEEE)*
		 alias:   "RHOut"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TRooAir1_V"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[10]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TDis2"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[11]
		{
		 type:    flt(64,IEEE)*
		 alias:   "V2_flow"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TDis1_V"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[12]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TRooAir2"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[13]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TDis1"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "V1_flow_V"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[14]
		{
		 type:    flt(64,IEEE)*
		 alias:   "V1_flow"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[15]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TRooAir1"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TDis2_V"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[16]
		{
		 type:    flt(64,IEEE)*
		 alias:   "t"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[17]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_TDryBul"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TRooAir2_V"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[18]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_relHum"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[19]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HDifHor"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[5]
		{
		 type:    flt(64,IEEE)*
		 alias:   "V2_flow_V"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[20]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HDirNor"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[21]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HGloHor"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[6]
		{
		 type:    flt(64,IEEE)*
		 alias:   "TOut_V"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[22]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_HHorIR"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[23]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_TBlaSky"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[7]
		{
		 type:    flt(64,IEEE)*
		 alias:   "RHOut_V"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[24]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_TDewPoi"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[25]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_ceiHei"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[26]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_cloTim"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[27]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_lat"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[28]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_lon"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[29]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_nOpa"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[30]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_nTot"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[31]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_pAtm"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[32]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solAlt"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[33]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solDec"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[34]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solHouAng"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[35]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solTim"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[36]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_solZen"
		 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
		p_0_twozonevavdemo_real_T_0[37]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_winDir"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[38]
		{
		 type:    flt(64,IEEE)*
		 alias:   "weaBus_winSpe"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}


  
  
		group "DymolaBlock" -- subsystem-group

			p_0_twozonevavdemo_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TRooAir1_V"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[1]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TDis1_V"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[2]
			{
			 type:    flt(64,IEEE)*
			 alias:   "V1_flow_V"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[3]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TDis2_V"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[4]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TRooAir2_V"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "V2_flow_V"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[6]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TOut_V"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "RHOut_V"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TOut"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "RHOut"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TDis2"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "V2_flow"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[12]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TRooAir2"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[13]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TDis1"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[14]
			{
			 type:    flt(64,IEEE)*
			 alias:   "V1_flow"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[15]
			{
			 type:    flt(64,IEEE)*
			 alias:   "TRooAir1"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[16]
			{
			 type:    flt(64,IEEE)*
			 alias:   "t"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_TDryBul"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_relHum"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HDifHor"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[20]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HDirNor"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[21]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HGloHor"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[22]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_HHorIR"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[23]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_TBlaSky"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[24]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_TDewPoi"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[25]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_ceiHei"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[26]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_cloTim"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[27]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_lat"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[28]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_lon"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[29]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_nOpa"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[30]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_nTot"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[31]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_pAtm"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[32]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solAlt"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[33]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solDec"
			 flags:   OUTPUT|READONLY
			 addr:    0x08298D80
			}
			p_0_twozonevavdemo_real_T_0[34]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solHouAng"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}
			p_0_twozonevavdemo_real_T_0[35]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solTim"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[36]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_solZen"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[37]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_winDir"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
			p_0_twozonevavdemo_real_T_0[38]
			{
			 type:    flt(64,IEEE)*
			 alias:   "weaBus_winSpe"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}


			group "Sfunc" -- block-group
			{
			 block: "S-Function"
			}
				p_0_twozonevavdemo_real_T_0[0]
				{
				 type:    twozonevavdemo_ArrayDT0_39*
				 alias:   "Out1"
				 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}

				p_1_twozonevavdemo_real_T_0[2]
				{
				 type:    twozonevavdemo_ArrayDT0_4978*
				 alias:   "P1"
				 flags:   PARAM
 addr:    0x08298D84
}
				p_1_twozonevavdemo_real_T_0[4982]
				{
				 type:    twozonevavdemo_ArrayDT0_108*
				 alias:   "P2"
				 flags:   PARAM
		 addr:    0x08298D84
		}


			endgroup -- block-group "Sfunc"

  
  
			group "Dymola Settings" -- subsystem-group





			endgroup -- subsystem-group "Dymola Settings"
  
  
			group "Modelica model2" -- subsystem-group





			endgroup -- subsystem-group "Modelica model2"
  
  
			group "compmodel" -- subsystem-group





			endgroup -- subsystem-group "compmodel"
  
  
			group "editmodel" -- subsystem-group





			endgroup -- subsystem-group "editmodel"


		endgroup -- subsystem-group "DymolaBlock"


	endgroup -- subsystem-group "Subsystem"
  
  
	group "in" -- subsystem-group

		p_0_twozonevavdemo_real_T_0[39]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Voltage"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}
		p_0_twozonevavdemo_real_T_0[40]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Voltage1"
		 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}


  
  
		group "yVAV1" -- subsystem-group

			p_0_twozonevavdemo_real_T_0[39]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Voltage"
			 flags:   OUTPUT|READONLY
 addr:    0x08298D80
}

		endgroup -- subsystem-group "yVAV1"
  
  
		group "yVAV2" -- subsystem-group

			p_0_twozonevavdemo_real_T_0[40]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Voltage"
			 flags:   OUTPUT|READONLY
		 addr:    0x08298D80
		}

		endgroup -- subsystem-group "yVAV2"


	endgroup -- subsystem-group "in"
  
  
	group "out" -- subsystem-group



  
  
		group "RHOut" -- subsystem-group


		endgroup -- subsystem-group "RHOut"
  
  
		group "TDis1" -- subsystem-group


		endgroup -- subsystem-group "TDis1"
  
  
		group "TDis2" -- subsystem-group


		endgroup -- subsystem-group "TDis2"
  
  
		group "TOut" -- subsystem-group


		endgroup -- subsystem-group "TOut"
  
  
		group "TRoo1" -- subsystem-group


		endgroup -- subsystem-group "TRoo1"
  
  
		group "TRoo2" -- subsystem-group


		endgroup -- subsystem-group "TRoo2"
  
  
		group "V1_flow" -- subsystem-group


		endgroup -- subsystem-group "V1_flow"
  
  
		group "V2_flow" -- subsystem-group


		endgroup -- subsystem-group "V2_flow"


	endgroup -- subsystem-group "out"



endgroup -- "Model Root"
-- ******** Tunable Parameters ************************************************

group "Tunable Parameters"


endgroup

-- ******** State Machine Data ************************************************

-- No Stateflow chart within the model.


-- ******** Labels ************************************************************

-- Generation of labels turned off with TRCGenerateLabels option.


-- ******** User variables from model_usr.trc *********************************

-- RTI_USR_TRC_BEGIN

-- No user file twozonevavdemo_usr.trc found.

-- RTI_USR_TRC_END

-- ******** [EOF] *************************************************************




-- ******** Diagnostics variables *********************************************

group "Diagnostics"
	pFuseActualStatus
	{
	 type:    uint(32)*
	 alias:   "Fuse Actual Status"
	 flags:   OUTPUT|READONLY
	 range:   <0; 1>
	 desc:    "0 = all fuses are intact, 1 = at least one fuse is open"
	 addr:    0x08271C48
	}
	pFuseRestoreRequest
	{
	 type:    uint(32)*
	 alias:   "Fuse Restore Request"
	 flags:   PARAM
	 range:   <0; 1>
	 value:   0
	 desc:    "If set to 1 all fuses are restored"
 addr:    0x08271C44
}
	
	group "Failure Simulation"
		pFailureSimulationClientConnected
		{
		 type:    uint(8)*
		 alias:   "Client connected"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure simulation client connected, 1 = Connection to a failure simulation client established"
		 addr:    0x08271C40
		}
		pFailureSimulationFailureConfigured
		{
		 type:    uint(8)*
		 alias:   "Failure configured"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure configured, 1 = Failure configured"
	 addr:    0x08271C3C
	}
		pFailureSimulationFailureActivated
		{
		 type:    uint(8)*
		 alias:   "Failure activated"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure active, 1 = Failure active"
		 addr:    0x08271C38
		}
		pFailureSimulationSequenceCount
		{
		 type:    uint(16)*
		 alias:   "Failure sequence count"
		 flags:   OUTPUT|READONLY
		 range:   <0; 65535>
		 desc:    "0 = No failure configured, 1..65535 = Failure sequence n is currently active"
	 addr:    0x08271C34
	}
		pFailureSimulationRelaySwitching
		{
		 type:    uint(8)*
		 alias:   "Relay switching"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = Failure simulation system is stable, 1 = Failure simulation system is currently busy. Relay switching in process"
 addr:    0x08271C30
}
	
	endgroup -- "Failure Simulation"

endgroup -- "Diagnostics"

-- ******** XIL API variables *************************************************

group "XIL API"
	
	group "EESPort"
		pXilApiEesPortActiveErrorSet
		{
		 type:    uint(32)*
		 alias:   "Active ErrorSet"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    "Index of active ErrorSet or 0 if no ErrorSet is active."
		 addr:    0x08271C2C
		}
		pXilApiEesPortErrorActivated
		{
		 type:    uint(32)*
		 alias:   "Error Activated"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 - no error is activated on hardware, 1 - at least one error is activated on hardware"
 addr:    0x08271C28
}
		pXilApiEesPortErrorSwitching
		{
		 type:    uint(32)*
		 alias:   "Error Switching"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 - no switching operation running on hardware, 1 - switching operation running on hardware"
		 addr:    0x08271C24
		}
		xilApiEesPortFlags
		{
		 type:    uint(32)
		 alias:   "Flags"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    ""
	 addr:    0x08271C20
	}
		xilApiEesPortTrigger
		{
		 type:    uint(32)
		 alias:   "Trigger"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    ""
 addr:    0x08271C1C
}
	
	endgroup -- "EESPort"

endgroup -- "XIL API"

-- ******** [EOF] *************************************************************


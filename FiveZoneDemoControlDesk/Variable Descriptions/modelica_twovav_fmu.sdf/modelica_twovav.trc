-- ***************************************************************************
-- Trace file: modelica_twovav.trc
--
-- Generated on 10/29/2021 16:18:08
-- Generated by dSPACE VDFGenerator
--
-- Copyright 2021, dSPACE GmbH. All rights reserved.
--
-- ***************************************************************************

-- Default data type formats
_floating_point_type(64,IEEE)
_integer_type(32)


sampling_period[0]
{
  value:       0.001
  alias:       "Periodic Task 1"
  unit:        "s"
}

-- Type definitions for enumerations
enum EnumDT0
{
  type:  int(32)
  enums
  {
    1 : "ParallelFlow"
    2 : "CounterFlow"
    3 : "CrossFlowUnmixed"
    4 : "CrossFlowCMinMixedCMaxUnmixed"
    5 : "CrossFlowCMinUnmixedCMaxMixed"
    6 : "ConstantTemperaturePhaseChange"
  }
}
enum EnumDT1
{
  type:  int(32)
  enums
  {
    1 : "NoInit"
    2 : "SteadyState"
    3 : "InitialState"
    4 : "InitialOutput"
  }
}
enum EnumDT2
{
  type:  int(32)
  enums
  {
    1 : "CriticalDamping"
    2 : "Bessel"
    3 : "Butterworth"
    4 : "ChebyshevI"
  }
}
enum EnumDT3
{
  type:  int(32)
  enums
  {
    1 : "LowPass"
    2 : "HighPass"
    3 : "BandPass"
    4 : "BandStop"
  }
}
enum EnumDT4
{
  type:  int(32)
  enums
  {
    1 : "ParallelFlow"
    2 : "CounterFlow"
    3 : "CrossFlowUnmixed"
    4 : "CrossFlowStream1MixedStream2Unmixed"
    5 : "CrossFlowStream1UnmixedStream2Mixed"
    6 : "ConstantTemperaturePhaseChange"
  }
}
enum EnumDT5
{
  type:  int(32)
  enums
  {
    1 : "Entering"
    2 : "Leaving"
    3 : "Bidirectional"
  }
}


-- ******** Simulation and RTOS variables *************************************

group "Simulation and RTOS"
	
	group "Task Information Variables"
		
		group "Periodic Task 1"
			Periodic_Task_1Vars_Calls
			{
			 type:    uint(64)
			 alias:   "Task Call Counter"
			 flags:   OUTPUT|READONLY
			 range:   <0; 18446744073709551615>
			 desc:    "Periodic Task 1"
			 addr:    0x0818AE6C
			}
			Periodic_Task_1Vars_TurnaroundTime
			{
			 type:    flt(64,IEEE)
			 alias:   "Task Turnaround Time"
			 flags:   OUTPUT|READONLY
			 desc:    "Periodic Task 1"
			 addr:    0x0818AE64
			}
			Periodic_Task_1Vars_OvnCounter
			{
			 type:    uint(32)
			 alias:   "Overrun Count"
			 flags:   OUTPUT|READONLY
			 desc:    "Periodic Task 1"
 addr:    0x0818AE60
}
		
		endgroup -- "Periodic Task 1"
	
	endgroup -- "Task Information Variables"
	
	group "Application Startup Variables"
		ScaledTimeInterval
		{
		 type:    flt(64,IEEE)
		 alias:   "Scaled Time Interval"
		 flags:   PARAM
		 range:   <0; inf>
		 value:   0
		 addr:    0x0818AEA8
		}
		ScalingFactor
		{
		 type:    flt(64,IEEE)
		 alias:   "Scaling Factor"
		 flags:   PARAM
		 range:   <1; inf>
		 value:   1
		 addr:    0x080B1198
		}
	
	endgroup -- "Application Startup Variables"

endgroup -- "Simulation and RTOS"

	
	group "Model Root"
		modelica_twovav_DSFMURealOutputs[560]
		{
		 type:    flt(64,IEEE)
		 alias:   "V2_flow"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous output: Volume flow rate from port_a to port_b"
		 addr:    0x0818AF00
		}
		modelica_twovav_DSFMURealOutputs[561]
		{
		 type:    flt(64,IEEE)
		 alias:   "V1_flow"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous output: Volume flow rate from port_a to port_b"
 addr:    0x0818AF00
}
		modelica_twovav_DSFMURealOutputs[592]
		{
		 type:    flt(64,IEEE)
		 alias:   "TDis2"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous output: Temperature of the passing fluid"
		 addr:    0x0818AF00
		}
		modelica_twovav_DSFMURealOutputs[593]
		{
		 type:    flt(64,IEEE)
		 alias:   "TDis1"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous output: Temperature of the passing fluid"
 addr:    0x0818AF00
}
		modelica_twovav_DSFMURealInputs
		{
		 type:    flt(64,IEEE)
		 alias:   "yVAV1"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "continuous input: Signal for VAV damper"
		 addr:    0x0818AEE0
		}
		modelica_twovav_DSFMURealInputs[1]
		{
		 type:    flt(64,IEEE)
		 alias:   "yVAV2"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "continuous input: Signal for VAV damper"
 addr:    0x0818AEE0
}
		modelica_twovav_DSFMURealTunableParams
		{
		 type:    flt(64,IEEE)
		 alias:   "VRoo"
		 flags:   PARAM
		 value:   129.60000000000002
		 desc:    "tunable parameter: Room volume"
		 addr:    0x080B2240
		}
		modelica_twovav_DSFMURealFixedDepParams
		{
		 type:    flt(64,IEEE)
		 alias:   "m_flow_nominal"
		 flags:   OUTPUT|READONLY
		 desc:    "constant local: Mass flow rate of this thermal zone"
		 addr:    0x080B1420
		}
		modelica_twovav_DSFMURealOutputs[20]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(vav1.vav.filter.x[1])"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Filter states)"
 addr:    0x0818AF00
}
		modelica_twovav_DSFMURealOutputs[22]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(vav1.vav.filter.x[2])"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Filter states)"
 addr:    0x0818AF00
}
		modelica_twovav_DSFMURealOutputs[288]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(vav2.vav.filter.x[1])"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Filter states)"
		 addr:    0x0818AF00
		}
		modelica_twovav_DSFMURealOutputs[290]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(vav2.vav.filter.x[2])"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Filter states)"
		 addr:    0x0818AF00
		}
		modelica_twovav_DSFMURealOutputs[543]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(VSup2.d)"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Density of the passing fluid)"
		 addr:    0x0818AF00
		}
		modelica_twovav_DSFMURealOutputs[559]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(VSup1.d)"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Density of the passing fluid)"
		 addr:    0x0818AF00
		}
		modelica_twovav_DSFMURealOutputs[573]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(TDisVAV1.T)"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Temperature of the passing fluid)"
 addr:    0x0818AF00
}
		modelica_twovav_DSFMURealOutputs[588]
		{
		 type:    flt(64,IEEE)
		 alias:   "der(TDisVAV2.T)"
		 flags:   OUTPUT|READONLY
		 desc:    "continuous local: der(Temperature of the passing fluid)"
		 addr:    0x0818AF00
		}
		
		group "vav1"
			modelica_twovav_DSFMUBooleanFixedDepParams
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[1]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Mass flow rate of this thermal zone"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealOutputs
			{
			 type:    flt(64,IEEE)
			 alias:   "VRoo"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Room volume"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[229]
			{
			 type:    flt(64,IEEE)
			 alias:   "yVal"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Actuator position for reheat valve (0: closed, 1: open)"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[228]
			{
			 type:    flt(64,IEEE)
			 alias:   "yVAV"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Signal for VAV damper"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[232]
			{
			 type:    flt(64,IEEE)
			 alias:   "y_actual"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Actual VAV damper position"
 addr:    0x0818AF00
}
			
			group "vav"
				modelica_twovav_DSFMURealFixedParams[2]
				{
				 type:    flt(64,IEEE)
				 alias:   "riseTime"
				 flags:   PARAM|INITONLY
				 value:   120
				 desc:    "fixed parameter (used for initialization): Rise time of the filter (time to reach 99.6 % of an opening step)"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealFixedParams[3]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_start"
				 flags:   PARAM|INITONLY
				 value:   1
				 desc:    "fixed parameter (used for initialization): Initial value of output"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMUBooleanTunableParams
				{
				 type:    uint(8)
				 alias:   "use_deltaM"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   1
				 desc:    "tunable parameter: Set to true to use deltaM for turbulent transition, else ReC is used"
			 addr:    0x080B2230
			}
				modelica_twovav_DSFMURealTunableParams[5]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltaM"
				 flags:   PARAM
				 value:   0.3
				 desc:    "tunable parameter: Fraction of nominal mass flow rate where transition to turbulent occurs"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMUBooleanTunableParams[1]
				{
				 type:    uint(8)
				 alias:   "roundDuct"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   0
				 desc:    "tunable parameter: Set to true for round duct, false for square cross section"
 addr:    0x080B2230
}
				modelica_twovav_DSFMURealTunableParams[6]
				{
				 type:    flt(64,IEEE)
				 alias:   "ReC"
				 flags:   PARAM
				 value:   4000
				 desc:    "tunable parameter: Reynolds number where transition to turbulent starts"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[7]
				{
				 type:    flt(64,IEEE)
				 alias:   "a"
				 flags:   PARAM
				 value:   -1.51
				 desc:    "tunable parameter: Coefficient a for damper characteristics"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealTunableParams[8]
				{
				 type:    flt(64,IEEE)
				 alias:   "b"
				 flags:   PARAM
				 value:   9.45
				 desc:    "tunable parameter: Coefficient b for damper characteristics"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[9]
				{
				 type:    flt(64,IEEE)
				 alias:   "yL"
				 flags:   PARAM
				 value:   0.16666666666666666
				 desc:    "tunable parameter: Lower value for damper curve"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[10]
				{
				 type:    flt(64,IEEE)
				 alias:   "yU"
				 flags:   PARAM
				 value:   0.61111111111111116
				 desc:    "tunable parameter: Upper value for damper curve"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealTunableParams[11]
				{
				 type:    flt(64,IEEE)
				 alias:   "k1"
				 flags:   PARAM
				 value:   0.45
				 desc:    "tunable parameter: Loss coefficient for y=1 (pressure drop divided by dynamic pressure)"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealTunableParams[12]
				{
				 type:    flt(64,IEEE)
				 alias:   "l"
				 flags:   PARAM
				 range:   <1E-10; 1>
				 value:   0.0001
				 desc:    "tunable parameter: Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealTunableParams[13]
				{
				 type:    flt(64,IEEE)
				 alias:   "l2"
				 flags:   PARAM
				 value:   0.01
				 desc:    "tunable parameter: Gain for mass flow increase if pressure is above nominal pressure"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealTunableParams[14]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltax"
				 flags:   PARAM
				 value:   0.02
				 desc:    "tunable parameter: Transition interval for flow rate"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[15]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_min"
				 flags:   PARAM
				 value:   0.02
				 desc:    "tunable parameter: Minimum value of control signal before zeroing of the opening"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealFixedDepParams[20]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[21]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[22]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[23]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[24]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[25]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[26]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[27]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[28]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[29]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[30]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[31]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[32]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[33]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[34]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[35]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[36]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[37]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[38]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[39]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[40]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[41]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[42]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[43]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[44]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[45]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUIntegerFixedDepParams[13]
				{
				 type:    int(32)
				 alias:   "idx_sorted[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[14]
				{
				 type:    int(32)
				 alias:   "idx_sorted[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[15]
				{
				 type:    int(32)
				 alias:   "idx_sorted[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[16]
				{
				 type:    int(32)
				 alias:   "idx_sorted[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[17]
				{
				 type:    int(32)
				 alias:   "idx_sorted[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[18]
				{
				 type:    int(32)
				 alias:   "idx_sorted[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[19]
				{
				 type:    int(32)
				 alias:   "idx_sorted[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[20]
				{
				 type:    int(32)
				 alias:   "idx_sorted[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
				 addr:    0x080B1300
				}
				modelica_twovav_DSFMUIntegerFixedDepParams[21]
				{
				 type:    int(32)
				 alias:   "idx_sorted[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
				 addr:    0x080B1300
				}
				modelica_twovav_DSFMUIntegerFixedDepParams[22]
				{
				 type:    int(32)
				 alias:   "idx_sorted[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[23]
				{
				 type:    int(32)
				 alias:   "idx_sorted[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[24]
				{
				 type:    int(32)
				 alias:   "idx_sorted[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[25]
				{
				 type:    int(32)
				 alias:   "idx_sorted[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMURealFixedDepParams[46]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[47]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[48]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[49]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[50]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[51]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[52]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[53]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[54]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[55]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[56]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[57]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[58]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[1]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[2]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[3]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_small"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Small mass flow rate for regularization of zero flow"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[2]
				{
				 type:    uint(8)
				 alias:   "show_T"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, if actual temperature at port is computed"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[4]
				{
				 type:    flt(64,IEEE)
				 alias:   "_m_flow_start"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[5]
				{
				 type:    flt(64,IEEE)
				 alias:   "_dp_start"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[3]
				{
				 type:    uint(8)
				 alias:   "from_dp"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[6]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure drop at nominal mass flow rate"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[4]
				{
				 type:    uint(8)
				 alias:   "linearized"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[7]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_nominal_pos"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Absolute value of nominal flow rate"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[8]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_nominal_pos"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Absolute value of nominal pressure difference"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[5]
				{
				 type:    uint(8)
				 alias:   "use_inputFilter"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, if opening is filtered with a 2nd order CriticalDamping filter"
 addr:    0x080B1260
}
				modelica_twovav_DSFMUIntegerFixedDepParams
				{
				 type:    int(32)
				 alias:   "order"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Order of filter"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[1]
				{
				 type:    enum EnumDT1
				 alias:   "init"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Type of initialization (no init/steady state/initial state/initial output)"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUBooleanFixedDepParams[6]
				{
				 type:    uint(8)
				 alias:   "casePreInd"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: In case of PressureIndependent the model I/O is modified"
				 addr:    0x080B1260
				}
				modelica_twovav_DSFMURealFixedDepParams[15]
				{
				 type:    flt(64,IEEE)
				 alias:   "dpDamper_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure drop of fully open damper at nominal mass flow rate"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[16]
				{
				 type:    flt(64,IEEE)
				 alias:   "dpFixed_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[7]
				{
				 type:    uint(8)
				 alias:   "use_constant_density"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to use constant density for flow friction"
				 addr:    0x080B1260
				}
				modelica_twovav_DSFMURealFixedDepParams[17]
				{
				 type:    flt(64,IEEE)
				 alias:   "kFixed"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)."
 addr:    0x080B1420
}
				modelica_twovav_DSFMUIntegerFixedDepParams[11]
				{
				 type:    int(32)
				 alias:   "sizeSupSplBnd"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Number of support points on each quadratic domain for spline interpolation"
				 addr:    0x080B1300
				}
				modelica_twovav_DSFMUIntegerFixedDepParams[12]
				{
				 type:    int(32)
				 alias:   "sizeSupSpl"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Total number of support points for spline interpolation"
 addr:    0x080B1300
}
				modelica_twovav_DSFMURealFixedDepParams[18]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: y values of unsorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[19]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[13]"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: y values of unsorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[59]
				{
				 type:    flt(64,IEEE)
				 alias:   "y2dd"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Second derivative at second support point"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[60]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_y2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[61]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_y1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Support points for interpolation flow functions"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[62]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_x"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[63]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_x1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[64]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_x2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[65]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_smooth"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Smooth interpolation result between two flow regimes"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealOutputs[11]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_turbulent"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Turbulent flow if |m_flow| >= m_flow_turbulent"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[12]
				{
				 type:    flt(64,IEEE)
				 alias:   "eta_default"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Dynamic viscosity, used to compute transition to turbulent flow regime"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[26]
				{
				 type:    flt(64,IEEE)
				 alias:   "v_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Nominal face velocity"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[27]
				{
				 type:    flt(64,IEEE)
				 alias:   "A"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Face area"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[28]
				{
				 type:    flt(64,IEEE)
				 alias:   "k0"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Loss coefficient for y=0 (pressure drop divided by dynamic pressure)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[29]
				{
				 type:    flt(64,IEEE)
				 alias:   "rho"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "tunable local: Medium density"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[32]
				{
				 type:    flt(64,IEEE)
				 alias:   "rho_default"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "tunable local: Density, used to compute fluid volume"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[33]
				{
				 type:    flt(64,IEEE)
				 alias:   "facRouDuc"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Shape factor used to compute the hydraulic diameter for round ducts"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[34]
				{
				 type:    flt(64,IEEE)
				 alias:   "kL"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Loss coefficient at the lower limit of the exponential characteristics"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[35]
				{
				 type:    flt(64,IEEE)
				 alias:   "kU"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Loss coefficient at the upper limit of the exponential characteristics"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[36]
				{
				 type:    flt(64,IEEE)
				 alias:   "cL[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y < yl"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[37]
				{
				 type:    flt(64,IEEE)
				 alias:   "cL[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y < yl"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[38]
				{
				 type:    flt(64,IEEE)
				 alias:   "cL[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y < yl"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[39]
				{
				 type:    flt(64,IEEE)
				 alias:   "cU[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y > yu"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[40]
				{
				 type:    flt(64,IEEE)
				 alias:   "cU[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y > yu"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[41]
				{
				 type:    flt(64,IEEE)
				 alias:   "cU[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y > yu"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[42]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDamMax"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[43]
				{
				 type:    flt(64,IEEE)
				 alias:   "kTotMax"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[44]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDamMin"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[45]
				{
				 type:    flt(64,IEEE)
				 alias:   "kTotMin"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[49]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[50]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[51]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[4]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[52]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[5]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[53]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[6]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[54]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[7]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[55]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[8]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[56]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[9]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[57]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[10]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[58]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[11]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[59]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[12]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[60]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[61]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[62]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[63]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[4]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[64]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[5]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[65]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[6]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[66]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[7]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[67]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[8]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[68]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[9]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[69]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[10]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[70]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[11]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[71]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[12]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[72]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[13]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[73]
				{
				 type:    flt(64,IEEE)
				 alias:   "coeff1"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Parameter for avoiding unnecessary computations"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[74]
				{
				 type:    flt(64,IEEE)
				 alias:   "coeff2"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Parameter for avoiding unnecessary computations"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[9]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[10]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Pressure difference between port_a and port_b"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[13]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Actuator position (0: closed, 1: open)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[14]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_actual"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Actual actuator position"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[15]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output connector for internal use (= y_actual if not casePreInd)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[16]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_filtered"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Filtered valve position in the range 0..1"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[30]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDam"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[31]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Flow coefficient of damper plus fixed resistance, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[46]
				{
				 type:    flt(64,IEEE)
				 alias:   "phi"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Ratio actual to nominal mass flow rate of damper, phi=kDam(y)/kDam(y=1)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[47]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSquInv"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Square inverse of flow coefficient (damper plus fixed resistance)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[48]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDamSquInv"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Square inverse of flow coefficient (damper only)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[75]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_set"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Requested mass flow rate"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[76]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_min"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Minimum pressure difference required for delivering requested mass flow rate"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[77]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_x"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[78]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_x1"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[79]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_x2"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[80]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_y2"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[81]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_y1"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Support points for interpolation flow functions"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[82]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_smooth"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Smooth interpolation result between two flow regimes"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[83]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_actual_smooth"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Fractional opening computed based on m_flow_smooth and dp"
		 addr:    0x0818AF00
		}
				
				group "sta_default"
					modelica_twovav_DSFMURealFixedParams
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   PARAM|INITONLY
					 range:   <0; 1>
					 value:   0.01
					 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMURealFixedParams[1]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   PARAM|INITONLY
					 range:   <0; 1>
					 value:   0.99
					 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B23E0
}
					modelica_twovav_DSFMURealTunableParams[1]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   PARAM
					 range:   <0; 100000000>
					 value:   101325
					 desc:    "tunable parameter: Absolute pressure of medium"
 addr:    0x080B2240
}
					modelica_twovav_DSFMURealTunableParams[2]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   PARAM
					 range:   <1; 10000>
					 value:   293.15
					 desc:    "tunable parameter: Temperature of medium"
 addr:    0x080B2240
}
				
				endgroup -- "sta_default"
				
				group "filter"
					modelica_twovav_DSFMURealFixedParams[4]
					{
					 type:    flt(64,IEEE)
					 alias:   "A_ripple"
					 flags:   PARAM|INITONLY
					 value:   0.5
					 desc:    "fixed parameter (used for initialization): Pass band ripple for Chebyshev filter (otherwise not used); > 0 required"
			 addr:    0x080B23E0
			}
					modelica_twovav_DSFMURealFixedParams[5]
					{
					 type:    flt(64,IEEE)
					 alias:   "f_min"
					 flags:   PARAM|INITONLY
					 value:   0
					 desc:    "fixed parameter (used for initialization): Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain)"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMUBooleanFixedParams
					{
					 type:    uint(8)
					 alias:   "normalized"
					 flags:   PARAM|INITONLY
					 range:   <0; 1>
					 value:   1
					 desc:    "fixed parameter (used for initialization): = true, if amplitude at f_cut = -3db, otherwise unmodified filter"
 addr:    0x080B23D8
}
					modelica_twovav_DSFMURealFixedParams[6]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_start[1]"
					 flags:   PARAM|INITONLY
					 value:   0
					 desc:    "fixed parameter (used for initialization): Initial or guess values of states"
 addr:    0x080B23E0
}
					modelica_twovav_DSFMURealFixedParams[7]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_start[2]"
					 flags:   PARAM|INITONLY
					 value:   0
					 desc:    "fixed parameter (used for initialization): Initial or guess values of states"
				 addr:    0x080B23E0
				}
					modelica_twovav_DSFMURealTunableParams[3]
					{
					 type:    flt(64,IEEE)
					 alias:   "gain"
					 flags:   PARAM
					 value:   1
					 desc:    "tunable parameter: Gain (= amplitude of frequency response at zero frequency)"
 addr:    0x080B2240
}
					modelica_twovav_DSFMURealTunableParams[4]
					{
					 type:    flt(64,IEEE)
					 alias:   "u_nominal"
					 flags:   PARAM
					 value:   1
					 desc:    "tunable parameter: Nominal value of input (used for scaling the states)"
 addr:    0x080B2240
}
					modelica_twovav_DSFMURealFixedDepParams[11]
					{
					 type:    flt(64,IEEE)
					 alias:   "cr[1]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[12]
					{
					 type:    flt(64,IEEE)
					 alias:   "cr[2]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
			 addr:    0x080B1420
			}
					modelica_twovav_DSFMURealFixedDepParams[13]
					{
					 type:    flt(64,IEEE)
					 alias:   "r[1]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[14]
					{
					 type:    flt(64,IEEE)
					 alias:   "r[2]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
				 addr:    0x080B1420
				}
					modelica_twovav_DSFMUIntegerFixedDepParams[2]
					{
					 type:    enum EnumDT2
					 alias:   "analogFilter"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI)"
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[3]
					{
					 type:    enum EnumDT3
					 alias:   "filterType"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Type of filter (LowPass/HighPass/BandPass/BandStop)"
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[4]
					{
					 type:    int(32)
					 alias:   "order"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Order of filter"
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[5]
					{
					 type:    enum EnumDT1
					 alias:   "init"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Type of initialization (no init/steady state/initial state/initial output)"
 addr:    0x080B1300
}
					modelica_twovav_DSFMUIntegerFixedDepParams[6]
					{
					 type:    int(32)
					 alias:   "nx"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[7]
					{
					 type:    int(32)
					 alias:   "ncr"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
 addr:    0x080B1300
}
					modelica_twovav_DSFMUIntegerFixedDepParams[8]
					{
					 type:    int(32)
					 alias:   "nc0"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[9]
					{
					 type:    int(32)
					 alias:   "na"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[10]
					{
					 type:    int(32)
					 alias:   "nr"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
 addr:    0x080B1300
}
					modelica_twovav_DSFMURealFixedDepParams[9]
					{
					 type:    flt(64,IEEE)
					 alias:   "f_cut"
					 flags:   OUTPUT|READONLY
					 desc:    "fixed local: Cut-off frequency"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[10]
					{
					 type:    flt(64,IEEE)
					 alias:   "y_start"
					 flags:   OUTPUT|READONLY
					 desc:    "fixed local: Initial value of output"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[17]
					{
					 type:    flt(64,IEEE)
					 alias:   "u"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Connector of Real input signal"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[18]
					{
					 type:    flt(64,IEEE)
					 alias:   "y"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Connector of Real output signal"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[19]
					{
					 type:    flt(64,IEEE)
					 alias:   "x[1]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Filter states"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[21]
					{
					 type:    flt(64,IEEE)
					 alias:   "x[2]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Filter states"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[23]
					{
					 type:    flt(64,IEEE)
					 alias:   "uu[1]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[24]
					{
					 type:    flt(64,IEEE)
					 alias:   "uu[2]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[25]
					{
					 type:    flt(64,IEEE)
					 alias:   "uu[3]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
				
				endgroup -- "filter"
				
				group "port_a"
					modelica_twovav_DSFMURealOutputs[3]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[4]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[1]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 100000>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[2]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				
				endgroup -- "port_a"
				
				group "port_b"
					modelica_twovav_DSFMURealOutputs[6]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[8]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[5]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
			 addr:    0x0818AF00
			}
					modelica_twovav_DSFMURealOutputs[7]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_b"
			
			endgroup -- "vav"
			
			group "terHea"
				modelica_twovav_DSFMURealFixedParams[14]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_a1_nominal"
				 flags:   PARAM|INITONLY
				 value:   289.85
				 desc:    "fixed parameter (used for initialization): Nominal temperature at port a1"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealFixedParams[15]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_a2_nominal"
				 flags:   PARAM|INITONLY
				 value:   355.35
				 desc:    "fixed parameter (used for initialization): Nominal temperature at port a2"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealTunableParams[16]
				{
				 type:    flt(64,IEEE)
				 alias:   "delta"
				 flags:   PARAM
				 value:   0.001
				 desc:    "tunable parameter: Parameter used for smoothing"
				 addr:    0x080B2240
				}
				modelica_twovav_DSFMURealTunableParams[17]
				{
				 type:    flt(64,IEEE)
				 alias:   "r_nominal"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   0.66666666666666663
				 desc:    "tunable parameter: Ratio between air-side and water-side convective heat transfer (hA-value) at nominal condition"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealFixedDepParams[167]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp1_default"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 1 at default medium state"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[168]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp2_default"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 2 at default medium state"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[169]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMin_flow_small"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Small value for smoothing of minimum heat capacity flow rate"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[173]
				{
				 type:    flt(64,IEEE)
				 alias:   "eps_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal heat transfer effectiveness"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[174]
				{
				 type:    flt(64,IEEE)
				 alias:   "UA_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal UA value"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[175]
				{
				 type:    flt(64,IEEE)
				 alias:   "NTU_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal number of transfer units"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[182]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp1_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 1 at nominal condition"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[183]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp2_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 2 at nominal condition"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[184]
				{
				 type:    flt(64,IEEE)
				 alias:   "C1_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal capacity flow rate of Medium 1"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[185]
				{
				 type:    flt(64,IEEE)
				 alias:   "C2_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal capacity flow rate of Medium 2"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[186]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMin_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Minimal capacity flow rate at nominal condition"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[187]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMax_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Maximum capacity flow rate at nominal condition"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[188]
				{
				 type:    flt(64,IEEE)
				 alias:   "Z_nominal"
				 flags:   PARAM|READONLY
				 range:   <0; 1>
				 desc:    "fixed calculatedParameter: Ratio of capacity flow rate at nominal condition"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[189]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_b1_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal temperature at port b1"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[190]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_b2_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal temperature at port b2"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMUIntegerFixedDepParams[27]
				{
				 type:    enum EnumDT0
				 alias:   "flowRegime_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Heat exchanger flow regime at nominal flow rates"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUBooleanFixedDepParams[8]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1"
				 addr:    0x080B1260
				}
				modelica_twovav_DSFMUBooleanFixedDepParams[9]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2"
				 addr:    0x080B1260
				}
				modelica_twovav_DSFMURealFixedDepParams[67]
				{
				 type:    flt(64,IEEE)
				 alias:   "m1_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[68]
				{
				 type:    flt(64,IEEE)
				 alias:   "m2_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[69]
				{
				 type:    flt(64,IEEE)
				 alias:   "m1_flow_small"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "constant local: Small mass flow rate for regularization of zero flow"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[70]
				{
				 type:    flt(64,IEEE)
				 alias:   "m2_flow_small"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[10]
				{
				 type:    uint(8)
				 alias:   "show_T"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[71]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference between port_a1 and port_b1"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[72]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference between port_a2 and port_b2"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[11]
				{
				 type:    uint(8)
				 alias:   "computeFlowResistance1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[12]
				{
				 type:    uint(8)
				 alias:   "from_dp1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[74]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp1_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[13]
				{
				 type:    uint(8)
				 alias:   "linearizeFlowResistance1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[75]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltaM1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[14]
				{
				 type:    uint(8)
				 alias:   "computeFlowResistance2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[15]
				{
				 type:    uint(8)
				 alias:   "from_dp2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[76]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp2_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[16]
				{
				 type:    uint(8)
				 alias:   "linearizeFlowResistance2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[77]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltaM2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[17]
				{
				 type:    uint(8)
				 alias:   "prescribedHeatFlowRate1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if the heat flow rate into fluid 1 is not a function of the component temperature"
 addr:    0x080B1260
}
				modelica_twovav_DSFMUBooleanFixedDepParams[18]
				{
				 type:    uint(8)
				 alias:   "prescribedHeatFlowRate2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if the heat flow rate into fluid 2 is not a function of the component temperature"
				 addr:    0x080B1260
				}
				modelica_twovav_DSFMURealFixedDepParams[78]
				{
				 type:    flt(64,IEEE)
				 alias:   "mWat1_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "constant local: Moisture mass flow rate added to the medium 1"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[79]
				{
				 type:    flt(64,IEEE)
				 alias:   "mWat2_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "constant local: Moisture mass flow rate added to the medium 2"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[19]
				{
				 type:    uint(8)
				 alias:   "sensibleOnly1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if sensible exchange only for medium 1"
 addr:    0x080B1260
}
				modelica_twovav_DSFMUBooleanFixedDepParams[20]
				{
				 type:    uint(8)
				 alias:   "sensibleOnly2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if sensible exchange only for medium 2"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[170]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_a2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Fraction of incoming state taken from port a2 (used to avoid excessive calls to regStep)"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[171]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_b2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Fraction of incoming state taken from port b2 (used to avoid excessive calls to regStep)"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUIntegerFixedDepParams[26]
				{
				 type:    enum EnumDT4
				 alias:   "configuration"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Heat exchanger configuration"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[59]
				{
				 type:    uint(8)
				 alias:   "use_Q_flow_nominal"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to specify Q_flow_nominal and temperatures, or to false to specify effectiveness"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[172]
				{
				 type:    flt(64,IEEE)
				 alias:   "Q_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal heat transfer"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealOutputs[98]
				{
				 type:    flt(64,IEEE)
				 alias:   "m2_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "tunable local: Mass flow rate from port_a2 to port_b2 (m2_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[172]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in2"
				 flags:   OUTPUT|READONLY
				 range:   <1; 10000>
				 desc:    "tunable local: Inlet temperature medium 2"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[174]
				{
				 type:    flt(64,IEEE)
				 alias:   "C2_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Heat capacity flow rate medium 2"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMUIntegerOutputs
				{
				 type:    enum EnumDT0
				 alias:   "flowRegime"
				 flags:   OUTPUT|READONLY
				 desc:    "discrete local: Heat exchanger flow regime"
 addr:    0x0818AEF0
}
				modelica_twovav_DSFMURealOutputs[97]
				{
				 type:    flt(64,IEEE)
				 alias:   "m1_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from port_a1 to port_b1 (m1_flow > 0 is design flow direction)"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[110]
				{
				 type:    flt(64,IEEE)
				 alias:   "Q1_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Heat transferred into the medium 1"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[111]
				{
				 type:    flt(64,IEEE)
				 alias:   "Q2_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Heat transferred into the medium 2"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[171]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in1"
				 flags:   OUTPUT|READONLY
				 range:   <1; 10000>
				 desc:    "continuous local: Inlet temperature medium 1"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[173]
				{
				 type:    flt(64,IEEE)
				 alias:   "C1_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Heat capacity flow rate medium 1"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[175]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMin_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Minimum heat capacity flow rate"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[176]
				{
				 type:    flt(64,IEEE)
				 alias:   "QMax_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Maximum heat flow rate into medium 1"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[177]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_a1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Fraction of incoming state taken from port a2 (used to avoid excessive calls to regStep)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[178]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_b1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Fraction of incoming state taken from port b2 (used to avoid excessive calls to regStep)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[179]
				{
				 type:    flt(64,IEEE)
				 alias:   "UA"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: UA value"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[180]
				{
				 type:    flt(64,IEEE)
				 alias:   "eps"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Heat exchanger effectiveness"
				 addr:    0x0818AF00
				}
				
				group "bal1"
					modelica_twovav_DSFMUBooleanFixedDepParams[21]
					{
					 type:    uint(8)
					 alias:   "allowFlowReversal"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[80]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[81]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_small"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[22]
					{
					 type:    uint(8)
					 alias:   "show_T"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, if actual temperature at port is computed"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[82]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference between port_a and port_b"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[83]
					{
					 type:    flt(64,IEEE)
					 alias:   "_m_flow_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[84]
					{
					 type:    flt(64,IEEE)
					 alias:   "_dp_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[23]
					{
					 type:    uint(8)
					 alias:   "computeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
				 addr:    0x080B1260
				}
					modelica_twovav_DSFMUBooleanFixedDepParams[24]
					{
					 type:    uint(8)
					 alias:   "from_dp"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[85]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[25]
					{
					 type:    uint(8)
					 alias:   "linearizeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[86]
					{
					 type:    flt(64,IEEE)
					 alias:   "deltaM"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
				 addr:    0x080B1420
				}
					modelica_twovav_DSFMUBooleanFixedDepParams[26]
					{
					 type:    uint(8)
					 alias:   "sensibleOnly"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if sensible exchange only"
				 addr:    0x080B1260
				}
					modelica_twovav_DSFMUBooleanFixedDepParams[27]
					{
					 type:    uint(8)
					 alias:   "prescribedHeatFlowRate"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if the heat flow rate is not a function of the component temperature"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[87]
					{
					 type:    flt(64,IEEE)
					 alias:   "mWat_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Moisture mass flow rate added to the medium"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[120]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[121]
					{
					 type:    flt(64,IEEE)
					 alias:   "Q_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Heat transferred into the medium"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[144]
					{
					 type:    flt(64,IEEE)
					 alias:   "hOut"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Leaving temperature of the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[145]
					{
					 type:    flt(64,IEEE)
					 alias:   "XiOut[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "continuous local: Leaving species concentration of the component"
 addr:    0x0818AF00
}
					
					group "preDro"
						modelica_twovav_DSFMUBooleanFixedDepParams[35]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[110]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[111]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[36]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[112]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[113]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[114]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[37]
						{
						 type:    uint(8)
						 alias:   "from_dp"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[115]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure drop at nominal mass flow rate"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMUBooleanFixedDepParams[38]
						{
						 type:    uint(8)
						 alias:   "linearized"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[116]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_turbulent"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Turbulent flow if |m_flow| >= m_flow_turbulent"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[118]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal flow rate"
			 addr:    0x080B1420
			}
						modelica_twovav_DSFMURealFixedDepParams[119]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal pressure difference"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[120]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaM"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Fraction of nominal mass flow rate where transition to turbulent occurs"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[121]
						{
						 type:    flt(64,IEEE)
						 alias:   "k"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[39]
						{
						 type:    uint(8)
						 alias:   "computeFlowResistance"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag to enable/disable computation of flow resistance"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[122]
						{
						 type:    flt(64,IEEE)
						 alias:   "coeff"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Precomputed coefficient to avoid division by parameter"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[117]
						{
						 type:    flt(64,IEEE)
						 alias:   "eta_default"
						 flags:   OUTPUT|READONLY
						 desc:    "fixed local: Dynamic viscosity, used to compute transition to turbulent flow regime"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealOutputs[143]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
						
						group "sta_default"
							modelica_twovav_DSFMURealFixedParams[8]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   PARAM|INITONLY
							 range:   <0; 100000000>
							 value:   101325
							 desc:    "fixed parameter (used for initialization): Absolute pressure of medium"
 addr:    0x080B23E0
}
							modelica_twovav_DSFMURealFixedParams[9]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   PARAM|INITONLY
							 range:   <1; 10000>
							 value:   293.15
							 desc:    "fixed parameter (used for initialization): Temperature of medium"
							 addr:    0x080B23E0
							}
							modelica_twovav_DSFMURealFixedParams[10]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[1]"
							 flags:   PARAM|INITONLY
							 range:   <0; 1>
							 value:   0.01
							 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B23E0
}
							modelica_twovav_DSFMURealFixedParams[11]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[2]"
							 flags:   PARAM|INITONLY
							 range:   <0; 1>
							 value:   0.99
							 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
							 addr:    0x080B23E0
							}
						
						endgroup -- "sta_default"
						
						group "port_a"
							modelica_twovav_DSFMURealOutputs[138]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[135]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-1E+60; 100000>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[136]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[137]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
						
						endgroup -- "port_a"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[141]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[142]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[139]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 1E+60>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[140]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						
						endgroup -- "port_b"
					
					endgroup -- "preDro"
					
					group "vol"
						modelica_twovav_DSFMUBooleanFixedDepParams[28]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[88]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[89]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[29]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[90]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[91]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[92]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[30]
						{
						 type:    uint(8)
						 alias:   "simplify_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[31]
						{
						 type:    uint(8)
						 alias:   "prescribedHeatFlowRate"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true if the heat flow rate is not a function of a temperature difference to the fluid temperature"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[32]
						{
						 type:    uint(8)
						 alias:   "use_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for moisture mass flow rate"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[33]
						{
						 type:    uint(8)
						 alias:   "use_C_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for trace substance"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[34]
						{
						 type:    uint(8)
						 alias:   "use_m_flowInv"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag, true if m_flowInv is used in the model"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[93]
						{
						 type:    flt(64,IEEE)
						 alias:   "s[1]"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Vector with zero everywhere except where species is"
			 addr:    0x080B1420
			}
						modelica_twovav_DSFMURealFixedDepParams[94]
						{
						 type:    flt(64,IEEE)
						 alias:   "mXi_flow[1]"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Mass flow rates of independent substances added to the medium"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[95]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Smoothing region for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[96]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaInvReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Inverse value of delta for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[97]
						{
						 type:    flt(64,IEEE)
						 alias:   "aReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[98]
						{
						 type:    flt(64,IEEE)
						 alias:   "bReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[99]
						{
						 type:    flt(64,IEEE)
						 alias:   "cReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[100]
						{
						 type:    flt(64,IEEE)
						 alias:   "dReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[101]
						{
						 type:    flt(64,IEEE)
						 alias:   "eReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
			 addr:    0x080B1420
			}
						modelica_twovav_DSFMURealFixedDepParams[102]
						{
						 type:    flt(64,IEEE)
						 alias:   "fReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[107]
						{
						 type:    flt(64,IEEE)
						 alias:   "cp_default"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Specific heat capacity, used to verify energy conservation"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[108]
						{
						 type:    flt(64,IEEE)
						 alias:   "dTMax"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Maximum temperature difference across the StaticTwoPortConservationEquation"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[109]
						{
						 type:    flt(64,IEEE)
						 alias:   "mWat_flow_internal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Needed to connect to conditional connector"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealOutputs[130]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[131]
						{
						 type:    flt(64,IEEE)
						 alias:   "Q_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Sensible plus latent heat flow rate transferred into the medium"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[132]
						{
						 type:    flt(64,IEEE)
						 alias:   "hOut"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Leaving specific enthalpy of the component"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[133]
						{
						 type:    flt(64,IEEE)
						 alias:   "XiOut[1]"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "continuous local: Leaving species concentration of the component"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[134]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flowInv"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Regularization of 1/m_flow of port_a"
				 addr:    0x0818AF00
				}
						
						group "state_default"
							modelica_twovav_DSFMURealFixedDepParams[103]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[104]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   OUTPUT|READONLY
							 range:   <1; 10000>
							 desc:    "constant local: Temperature of medium"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[105]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[106]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[2]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
							 addr:    0x080B1420
							}
						
						endgroup -- "state_default"
						
						group "port_a"
							modelica_twovav_DSFMURealOutputs[125]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[122]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-1E+60; 100000>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[123]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[124]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						
						endgroup -- "port_a"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[129]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[126]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 1E+60>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[127]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[128]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						
						endgroup -- "port_b"
					
					endgroup -- "vol"
					
					group "masExc"
						modelica_twovav_DSFMURealFixedDepParams[123]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Value of Real output"
		 addr:    0x080B1420
		}
					
					endgroup -- "masExc"
					
					group "port_a"
						modelica_twovav_DSFMURealOutputs[115]
						{
						 type:    flt(64,IEEE)
						 alias:   "Xi_outflow[1]"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[112]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <-1E+60; 100000>
						 desc:    "continuous local: Mass flow rate from the connection point into the component"
				 addr:    0x0818AF00
				}
						modelica_twovav_DSFMURealOutputs[113]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[114]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					
					endgroup -- "port_a"
					
					group "port_b"
						modelica_twovav_DSFMURealOutputs[119]
						{
						 type:    flt(64,IEEE)
						 alias:   "Xi_outflow[1]"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[116]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <-100000; 1E+60>
						 desc:    "continuous local: Mass flow rate from the connection point into the component"
				 addr:    0x0818AF00
				}
						modelica_twovav_DSFMURealOutputs[117]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[118]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					
					endgroup -- "port_b"
					
					group "heaInp"
						modelica_twovav_DSFMURealOutputs[146]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Value of Real output"
		 addr:    0x0818AF00
		}
					
					endgroup -- "heaInp"
				
				endgroup -- "bal1"
				
				group "bal2"
					modelica_twovav_DSFMUBooleanFixedDepParams[40]
					{
					 type:    uint(8)
					 alias:   "allowFlowReversal"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[125]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[126]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_small"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[41]
					{
					 type:    uint(8)
					 alias:   "show_T"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, if actual temperature at port is computed"
				 addr:    0x080B1260
				}
					modelica_twovav_DSFMURealFixedDepParams[127]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference between port_a and port_b"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[128]
					{
					 type:    flt(64,IEEE)
					 alias:   "_m_flow_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[129]
					{
					 type:    flt(64,IEEE)
					 alias:   "_dp_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[42]
					{
					 type:    uint(8)
					 alias:   "computeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[43]
					{
					 type:    uint(8)
					 alias:   "from_dp"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[130]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[44]
					{
					 type:    uint(8)
					 alias:   "linearizeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[131]
					{
					 type:    flt(64,IEEE)
					 alias:   "deltaM"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[45]
					{
					 type:    uint(8)
					 alias:   "sensibleOnly"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if sensible exchange only"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[46]
					{
					 type:    uint(8)
					 alias:   "prescribedHeatFlowRate"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if the heat flow rate is not a function of the component temperature"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[132]
					{
					 type:    flt(64,IEEE)
					 alias:   "mWat_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Moisture mass flow rate added to the medium"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[152]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[153]
					{
					 type:    flt(64,IEEE)
					 alias:   "Q_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Heat transferred into the medium"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[169]
					{
					 type:    flt(64,IEEE)
					 alias:   "hOut"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Leaving temperature of the component"
				 addr:    0x0818AF00
				}
					
					group "preDro"
						modelica_twovav_DSFMUBooleanFixedDepParams[54]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMURealFixedDepParams[153]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[154]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[55]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[155]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[156]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[157]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[56]
						{
						 type:    uint(8)
						 alias:   "from_dp"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[158]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure drop at nominal mass flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[57]
						{
						 type:    uint(8)
						 alias:   "linearized"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[159]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_turbulent"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Turbulent flow if |m_flow| >= m_flow_turbulent"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[160]
						{
						 type:    flt(64,IEEE)
						 alias:   "eta_default"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Dynamic viscosity, used to compute transition to turbulent flow regime"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[161]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal flow rate"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[162]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal pressure difference"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[163]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaM"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Fraction of nominal mass flow rate where transition to turbulent occurs"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[164]
						{
						 type:    flt(64,IEEE)
						 alias:   "k"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMUBooleanFixedDepParams[58]
						{
						 type:    uint(8)
						 alias:   "computeFlowResistance"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag to enable/disable computation of flow resistance"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMURealFixedDepParams[165]
						{
						 type:    flt(64,IEEE)
						 alias:   "coeff"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Precomputed coefficient to avoid division by parameter"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealOutputs[168]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "tunable local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
						
						group "sta_default"
							modelica_twovav_DSFMURealFixedParams[12]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   PARAM|INITONLY
							 range:   <0; 100000000>
							 value:   300000
							 desc:    "fixed parameter (used for initialization): Absolute pressure of medium"
							 addr:    0x080B23E0
							}
							modelica_twovav_DSFMURealFixedParams[13]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   PARAM|INITONLY
							 range:   <1; 10000>
							 value:   293.15
							 desc:    "fixed parameter (used for initialization): Temperature of medium"
 addr:    0x080B23E0
}
						
						endgroup -- "sta_default"
						
						group "port_a"
							modelica_twovav_DSFMURealFixedDepParams[152]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealOutputs[163]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000>
							 desc:    "tunable local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[164]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						
						endgroup -- "port_a"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[167]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[165]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 0>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[166]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						
						endgroup -- "port_b"
					
					endgroup -- "preDro"
					
					group "port_a"
						modelica_twovav_DSFMURealFixedDepParams[124]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealOutputs[147]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000>
						 desc:    "tunable local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[148]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					
					endgroup -- "port_a"
					
					group "vol"
						modelica_twovav_DSFMUBooleanFixedDepParams[47]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[134]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[135]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[48]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMURealFixedDepParams[136]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[137]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[138]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[49]
						{
						 type:    uint(8)
						 alias:   "simplify_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMUBooleanFixedDepParams[50]
						{
						 type:    uint(8)
						 alias:   "prescribedHeatFlowRate"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true if the heat flow rate is not a function of a temperature difference to the fluid temperature"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMUBooleanFixedDepParams[51]
						{
						 type:    uint(8)
						 alias:   "use_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for moisture mass flow rate"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[52]
						{
						 type:    uint(8)
						 alias:   "use_C_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for trace substance"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[53]
						{
						 type:    uint(8)
						 alias:   "use_m_flowInv"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag, true if m_flowInv is used in the model"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[139]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Smoothing region for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[140]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaInvReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Inverse value of delta for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[141]
						{
						 type:    flt(64,IEEE)
						 alias:   "aReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[142]
						{
						 type:    flt(64,IEEE)
						 alias:   "bReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[143]
						{
						 type:    flt(64,IEEE)
						 alias:   "cReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[144]
						{
						 type:    flt(64,IEEE)
						 alias:   "dReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[145]
						{
						 type:    flt(64,IEEE)
						 alias:   "eReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[146]
						{
						 type:    flt(64,IEEE)
						 alias:   "fReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[149]
						{
						 type:    flt(64,IEEE)
						 alias:   "cp_default"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Specific heat capacity, used to verify energy conservation"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[150]
						{
						 type:    flt(64,IEEE)
						 alias:   "dTMax"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Maximum temperature difference across the StaticTwoPortConservationEquation"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[151]
						{
						 type:    flt(64,IEEE)
						 alias:   "mWat_flow_internal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Needed to connect to conditional connector"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealOutputs[159]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "tunable local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[162]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flowInv"
						 flags:   OUTPUT|READONLY
						 desc:    "tunable local: Regularization of 1/m_flow of port_a"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[160]
						{
						 type:    flt(64,IEEE)
						 alias:   "Q_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Sensible plus latent heat flow rate transferred into the medium"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[161]
						{
						 type:    flt(64,IEEE)
						 alias:   "hOut"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Leaving specific enthalpy of the component"
 addr:    0x0818AF00
}
						
						group "port_a"
							modelica_twovav_DSFMURealFixedDepParams[133]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealOutputs[154]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000>
							 desc:    "tunable local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[155]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						
						endgroup -- "port_a"
						
						group "state_default"
							modelica_twovav_DSFMURealFixedDepParams[147]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[148]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   OUTPUT|READONLY
							 range:   <1; 10000>
							 desc:    "constant local: Temperature of medium"
							 addr:    0x080B1420
							}
						
						endgroup -- "state_default"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[156]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 0>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[157]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[158]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						
						endgroup -- "port_b"
					
					endgroup -- "vol"
					
					group "masExc"
						modelica_twovav_DSFMURealFixedDepParams[166]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Value of Real output"
		 addr:    0x080B1420
		}
					
					endgroup -- "masExc"
					
					group "port_b"
						modelica_twovav_DSFMURealOutputs[149]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <-100000; 0>
						 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[150]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[151]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					
					endgroup -- "port_b"
					
					group "heaInp"
						modelica_twovav_DSFMURealOutputs[170]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Value of Real output"
		 addr:    0x0818AF00
		}
					
					endgroup -- "heaInp"
				
				endgroup -- "bal2"
				
				group "hA"
					modelica_twovav_DSFMURealFixedParams[16]
					{
					 type:    flt(64,IEEE)
					 alias:   "T0_w"
					 flags:   PARAM|INITONLY
					 value:   293.15
					 desc:    "fixed parameter (used for initialization): Water temperature"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMURealFixedParams[17]
					{
					 type:    flt(64,IEEE)
					 alias:   "T0_a"
					 flags:   PARAM|INITONLY
					 value:   293.15
					 desc:    "fixed parameter (used for initialization): Air temperature"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMURealTunableParams[18]
					{
					 type:    flt(64,IEEE)
					 alias:   "n_w"
					 flags:   PARAM
					 range:   <0; 1>
					 value:   0.85
					 desc:    "tunable parameter: Water-side exponent for convective heat transfer coefficient, h~m_flow^n"
 addr:    0x080B2240
}
					modelica_twovav_DSFMURealTunableParams[19]
					{
					 type:    flt(64,IEEE)
					 alias:   "n_a"
					 flags:   PARAM
					 range:   <0; 1>
					 value:   0.8
					 desc:    "tunable parameter: Air-side exponent for convective heat transfer coefficient, h~m_flow^n"
		 addr:    0x080B2240
		}
					modelica_twovav_DSFMURealFixedDepParams[196]
					{
					 type:    flt(64,IEEE)
					 alias:   "s_w"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: Coefficient for temperature dependence of water side heat transfer coefficient"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[192]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal_w"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Water mass flow rate"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[193]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal_a"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Air mass flow rate"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[60]
					{
					 type:    uint(8)
					 alias:   "waterSideFlowDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make water-side hA independent of mass flow rate"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[61]
					{
					 type:    uint(8)
					 alias:   "airSideFlowDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make air-side hA independent of mass flow rate"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[62]
					{
					 type:    uint(8)
					 alias:   "waterSideTemperatureDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make water-side hA independent of temperature"
 addr:    0x080B1260
}
					modelica_twovav_DSFMUBooleanFixedDepParams[63]
					{
					 type:    uint(8)
					 alias:   "airSideTemperatureDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make air-side hA independent of temperature"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[194]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_a"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Factor for air side temperature dependent variation of heat transfer coefficient"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[195]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_w"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Factor for water side temperature dependent variation of heat transfer coefficient"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[191]
					{
					 type:    flt(64,IEEE)
					 alias:   "UA_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "fixed local: Thermal conductance at nominal flow"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[182]
					{
					 type:    flt(64,IEEE)
					 alias:   "m2_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Mass flow rate medium 2"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[186]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_2"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Convective heat transfer medium 2"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[187]
					{
					 type:    flt(64,IEEE)
					 alias:   "r_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Ratio between air-side and water-side convective heat transfer coefficient"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[188]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_nominal_w"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Water side convective heat transfer coefficient"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[189]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_nominal_a"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Air side convective heat transfer coefficient, including fin resistance"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[191]
					{
					 type:    flt(64,IEEE)
					 alias:   "fm_a"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Fraction of actual to nominal mass flow rate"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[181]
					{
					 type:    flt(64,IEEE)
					 alias:   "m1_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Mass flow rate medium 1"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[183]
					{
					 type:    flt(64,IEEE)
					 alias:   "T_1"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Temperature medium 1"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[184]
					{
					 type:    flt(64,IEEE)
					 alias:   "T_2"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Temperature medium 2"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[185]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_1"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Convective heat transfer medium 1"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[190]
					{
					 type:    flt(64,IEEE)
					 alias:   "fm_w"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Fraction of actual to nominal mass flow rate"
 addr:    0x0818AF00
}
				
				endgroup -- "hA"
				
				group "port_a2"
					modelica_twovav_DSFMURealFixedDepParams[66]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x080B1420
			}
					modelica_twovav_DSFMURealOutputs[92]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000>
					 desc:    "tunable local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[93]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				
				endgroup -- "port_a2"
				
				group "sta1_default"
					modelica_twovav_DSFMURealFixedDepParams[176]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[177]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "constant local: Temperature of medium"
				 addr:    0x080B1420
				}
					modelica_twovav_DSFMURealFixedDepParams[178]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[179]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B1420
}
				
				endgroup -- "sta1_default"
				
				group "sta2_default"
					modelica_twovav_DSFMURealFixedDepParams[180]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[181]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "constant local: Temperature of medium"
			 addr:    0x080B1420
			}
				
				endgroup -- "sta2_default"
				
				group "state_b2_inflow"
					modelica_twovav_DSFMURealFixedDepParams[73]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "fixed local: Temperature of medium"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[109]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
				 addr:    0x0818AF00
				}
				
				endgroup -- "state_b2_inflow"
				
				group "port_a1"
					modelica_twovav_DSFMURealOutputs[87]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[84]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 100000>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[85]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[86]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_a1"
				
				group "port_b1"
					modelica_twovav_DSFMURealOutputs[91]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[88]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[89]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[90]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
				 addr:    0x0818AF00
				}
				
				endgroup -- "port_b1"
				
				group "state_a1_inflow"
					modelica_twovav_DSFMURealOutputs[100]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[101]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[102]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[99]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
				 addr:    0x0818AF00
				}
				
				endgroup -- "state_a1_inflow"
				
				group "state_b1_inflow"
					modelica_twovav_DSFMURealOutputs[104]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[105]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[106]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[103]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
				 addr:    0x0818AF00
				}
				
				endgroup -- "state_b1_inflow"
				
				group "state_a2_inflow"
					modelica_twovav_DSFMURealOutputs[108]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[107]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
		 addr:    0x0818AF00
		}
				
				endgroup -- "state_a2_inflow"
				
				group "port_b2"
					modelica_twovav_DSFMURealOutputs[94]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 0>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[95]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[96]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_b2"
			
			endgroup -- "terHea"
			
			group "sinTer"
				modelica_twovav_DSFMURealFixedParams[18]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   PARAM|INITONLY
				 range:   <0; 100000000>
				 value:   300000
				 desc:    "fixed parameter (used for initialization): Fixed value of pressure"
		 addr:    0x080B23E0
		}
				modelica_twovav_DSFMURealFixedParams[19]
				{
				 type:    flt(64,IEEE)
				 alias:   "T"
				 flags:   PARAM|INITONLY
				 range:   <1; 10000>
				 value:   293.15
				 desc:    "fixed parameter (used for initialization): Fixed value of temperature"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealTunableParams[20]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[1]"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   1
				 desc:    "tunable parameter: Fixed value of composition"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[28]
				{
				 type:    int(32)
				 alias:   "nPorts"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Number of ports"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[64]
				{
				 type:    uint(8)
				 alias:   "verifyInputs"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to stop the simulation with an error if the medium temperature is outside its allowable range"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[29]
				{
				 type:    enum EnumDT5
				 alias:   "flowDirection"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Allowed flow direction"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUBooleanFixedDepParams[65]
				{
				 type:    uint(8)
				 alias:   "checkWaterPressure"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Evaluates to true if the pressure should be checked"
			 addr:    0x080B1260
			}
				modelica_twovav_DSFMUBooleanFixedDepParams[66]
				{
				 type:    uint(8)
				 alias:   "checkAirPressure"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Evaluates to true if the pressure should be checked"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[198]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "fixed local: Needed to connect to conditional connector"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealOutputs[195]
				{
				 type:    flt(64,IEEE)
				 alias:   "X_in_internal[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[194]
				{
				 type:    flt(64,IEEE)
				 alias:   "p_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[196]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Internal connector for enthalpy"
		 addr:    0x0818AF00
		}
				
				group "ports[1]"
					modelica_twovav_DSFMURealFixedDepParams[197]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "fixed local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealOutputs[192]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 1E+60>
					 desc:    "tunable local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[193]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				
				endgroup -- "ports[1]"
			
			endgroup -- "sinTer"
			
			group "souTer"
				modelica_twovav_DSFMURealFixedParams[20]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   PARAM|INITONLY
				 value:   0
				 desc:    "fixed parameter (used for initialization): Fixed mass flow rate going out of the fluid port"
		 addr:    0x080B23E0
		}
				modelica_twovav_DSFMURealTunableParams[21]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[1]"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   1
				 desc:    "tunable parameter: Fixed value of composition"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[22]
				{
				 type:    flt(64,IEEE)
				 alias:   "T"
				 flags:   PARAM
				 range:   <1; 10000>
				 value:   323.15
				 desc:    "tunable parameter: Fixed value of temperature"
 addr:    0x080B2240
}
				modelica_twovav_DSFMUIntegerFixedDepParams[30]
				{
				 type:    int(32)
				 alias:   "nPorts"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Number of ports"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUBooleanFixedDepParams[68]
				{
				 type:    uint(8)
				 alias:   "verifyInputs"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to stop the simulation with an error if the medium temperature is outside its allowable range"
				 addr:    0x080B1260
				}
				modelica_twovav_DSFMUIntegerFixedDepParams[31]
				{
				 type:    enum EnumDT5
				 alias:   "flowDirection"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Allowed flow direction"
				 addr:    0x080B1300
				}
				modelica_twovav_DSFMURealOutputs[223]
				{
				 type:    flt(64,IEEE)
				 alias:   "X_in_internal[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[224]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_in"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Prescribed mass flow rate"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[225]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[226]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[222]
				{
				 type:    flt(64,IEEE)
				 alias:   "p_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[227]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Internal connector for enthalpy"
		 addr:    0x0818AF00
		}
				
				group "ports[1]"
					modelica_twovav_DSFMURealOutputs[221]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[219]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[220]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				
				endgroup -- "ports[1]"
			
			endgroup -- "souTer"
			
			group "senMasFlo"
				modelica_twovav_DSFMUBooleanFixedDepParams[67]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[199]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate, used for regularization near zero flow"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[200]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_small"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required)"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealOutputs[213]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Mass flow rate from port_a to port_b"
 addr:    0x0818AF00
}
				
				group "port_a"
					modelica_twovav_DSFMURealOutputs[206]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[207]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[208]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[205]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 100000>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
				
				endgroup -- "port_a"
				
				group "port_b"
					modelica_twovav_DSFMURealOutputs[210]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[212]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[209]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[211]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				
				endgroup -- "port_b"
			
			endgroup -- "senMasFlo"
			
			group "fraMasFlo"
				modelica_twovav_DSFMURealFixedDepParams[201]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Gain value multiplied with input signal"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealOutputs[214]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Input signal connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[215]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output signal connector"
				 addr:    0x0818AF00
				}
			
			endgroup -- "fraMasFlo"
			
			group "gaiM_flow"
				modelica_twovav_DSFMURealFixedDepParams[202]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Gain value multiplied with input signal"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealOutputs[230]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Input signal connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[231]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output signal connector"
				 addr:    0x0818AF00
				}
			
			endgroup -- "gaiM_flow"
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[200]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[197]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[198]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "continuous local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[199]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[202]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[204]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[201]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[203]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
			
			endgroup -- "port_b"
			
			group "ACH"
				modelica_twovav_DSFMURealOutputs[216]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Gain value multiplied with input signal"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[217]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Input signal connector"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[218]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output signal connector"
 addr:    0x0818AF00
}
			
			endgroup -- "ACH"
		
		endgroup -- "vav1"
		
		group "rooSin"
			modelica_twovav_DSFMURealFixedParams[21]
			{
			 type:    flt(64,IEEE)
			 alias:   "X[2]"
			 flags:   PARAM|INITONLY
			 range:   <0; 1>
			 value:   0.99
			 desc:    "fixed parameter (used for initialization): Fixed value of composition"
			 addr:    0x080B23E0
			}
			modelica_twovav_DSFMURealTunableParams[24]
			{
			 type:    flt(64,IEEE)
			 alias:   "p"
			 flags:   PARAM
			 range:   <0; 100000000>
			 value:   101325
			 desc:    "tunable parameter: Fixed value of pressure"
		 addr:    0x080B2240
		}
			modelica_twovav_DSFMURealTunableParams[25]
			{
			 type:    flt(64,IEEE)
			 alias:   "T"
			 flags:   PARAM
			 range:   <1; 10000>
			 value:   293.15
			 desc:    "tunable parameter: Fixed value of temperature"
 addr:    0x080B2240
}
			modelica_twovav_DSFMURealTunableParams[26]
			{
			 type:    flt(64,IEEE)
			 alias:   "X[1]"
			 flags:   PARAM
			 range:   <0; 1>
			 value:   0.01
			 desc:    "tunable parameter: Fixed value of composition"
 addr:    0x080B2240
}
			modelica_twovav_DSFMUIntegerFixedDepParams[32]
			{
			 type:    int(32)
			 alias:   "nPorts"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Number of ports"
		 addr:    0x080B1300
		}
			modelica_twovav_DSFMUIntegerFixedDepParams[33]
			{
			 type:    enum EnumDT5
			 alias:   "flowDirection"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Allowed flow direction"
		 addr:    0x080B1300
		}
			modelica_twovav_DSFMURealFixedDepParams[205]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_in_internal[2]"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Needed to connect to conditional connector"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealOutputs[267]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_in_internal[1]"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[265]
			{
			 type:    flt(64,IEEE)
			 alias:   "p_in_internal"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[266]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_in_internal"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Needed to connect to conditional connector"
			 addr:    0x0818AF00
			}
			
			group "medium"
				modelica_twovav_DSFMUBooleanFixedDepParams[69]
				{
				 type:    uint(8)
				 alias:   "preferredMediumStates"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true if StateSelect.prefer shall be used for the independent property variables of the medium"
 addr:    0x080B1260
}
				modelica_twovav_DSFMUBooleanFixedDepParams[70]
				{
				 type:    uint(8)
				 alias:   "standardOrderComponents"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: If true, and reducedX = true, the last element of X will be computed from the other ones"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[203]
				{
				 type:    flt(64,IEEE)
				 alias:   "MMX[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Molar masses of components"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[204]
				{
				 type:    flt(64,IEEE)
				 alias:   "MMX[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Molar masses of components"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealOutputs[234]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Absolute pressure of medium"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[236]
				{
				 type:    flt(64,IEEE)
				 alias:   "h"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Specific enthalpy of medium"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[237]
				{
				 type:    flt(64,IEEE)
				 alias:   "d"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "tunable local: Density of medium"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[238]
				{
				 type:    flt(64,IEEE)
				 alias:   "T"
				 flags:   OUTPUT|READONLY
				 range:   <1; 10000>
				 desc:    "tunable local: Temperature of medium"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[239]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[240]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[2]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[241]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 range:   <-100000000; 100000000>
				 desc:    "tunable local: Specific internal energy of medium"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[242]
				{
				 type:    flt(64,IEEE)
				 alias:   "R"
				 flags:   OUTPUT|READONLY
				 range:   <0; 10000000>
				 desc:    "tunable local: Gas constant (of mixture if applicable)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[243]
				{
				 type:    flt(64,IEEE)
				 alias:   "MM"
				 flags:   OUTPUT|READONLY
				 range:   <0.001; 0.25>
				 desc:    "tunable local: Molar mass (of mixture or single fluid)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[248]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_degC"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Temperature of medium in [degC]"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[249]
				{
				 type:    flt(64,IEEE)
				 alias:   "p_bar"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Absolute pressure of medium in [bar]"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[250]
				{
				 type:    flt(64,IEEE)
				 alias:   "X_steam"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Mass fraction of steam water"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[251]
				{
				 type:    flt(64,IEEE)
				 alias:   "X_air"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Mass fraction of air"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[252]
				{
				 type:    flt(64,IEEE)
				 alias:   "dT"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Temperature difference used to compute enthalpy"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[235]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Structurally independent mass fractions"
		 addr:    0x0818AF00
		}
				
				group "state"
					modelica_twovav_DSFMURealOutputs[244]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Absolute pressure of medium"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[245]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[246]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[247]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
				
				endgroup -- "state"
			
			endgroup -- "medium"
			
			group "ports[1]"
				modelica_twovav_DSFMURealOutputs[254]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[255]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[256]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[253]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
			
			endgroup -- "ports[1]"
			
			group "ports[2]"
				modelica_twovav_DSFMURealOutputs[258]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[259]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[260]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[257]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
			
			endgroup -- "ports[2]"
			
			group "ports[3]"
				modelica_twovav_DSFMURealOutputs[262]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[263]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[264]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[261]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
			
			endgroup -- "ports[3]"
		
		endgroup -- "rooSin"
		
		group "vav2"
			modelica_twovav_DSFMUBooleanFixedDepParams[71]
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[206]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Mass flow rate of this thermal zone"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMURealOutputs[268]
			{
			 type:    flt(64,IEEE)
			 alias:   "VRoo"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Room volume"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[497]
			{
			 type:    flt(64,IEEE)
			 alias:   "yVal"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Actuator position for reheat valve (0: closed, 1: open)"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[496]
			{
			 type:    flt(64,IEEE)
			 alias:   "yVAV"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Signal for VAV damper"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[500]
			{
			 type:    flt(64,IEEE)
			 alias:   "y_actual"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Actual VAV damper position"
 addr:    0x0818AF00
}
			
			group "vav"
				modelica_twovav_DSFMURealFixedParams[24]
				{
				 type:    flt(64,IEEE)
				 alias:   "riseTime"
				 flags:   PARAM|INITONLY
				 value:   120
				 desc:    "fixed parameter (used for initialization): Rise time of the filter (time to reach 99.6 % of an opening step)"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealFixedParams[25]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_start"
				 flags:   PARAM|INITONLY
				 value:   1
				 desc:    "fixed parameter (used for initialization): Initial value of output"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMUBooleanTunableParams[2]
				{
				 type:    uint(8)
				 alias:   "use_deltaM"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   1
				 desc:    "tunable parameter: Set to true to use deltaM for turbulent transition, else ReC is used"
			 addr:    0x080B2230
			}
				modelica_twovav_DSFMURealTunableParams[31]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltaM"
				 flags:   PARAM
				 value:   0.3
				 desc:    "tunable parameter: Fraction of nominal mass flow rate where transition to turbulent occurs"
 addr:    0x080B2240
}
				modelica_twovav_DSFMUBooleanTunableParams[3]
				{
				 type:    uint(8)
				 alias:   "roundDuct"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   0
				 desc:    "tunable parameter: Set to true for round duct, false for square cross section"
		 addr:    0x080B2230
		}
				modelica_twovav_DSFMURealTunableParams[32]
				{
				 type:    flt(64,IEEE)
				 alias:   "ReC"
				 flags:   PARAM
				 value:   4000
				 desc:    "tunable parameter: Reynolds number where transition to turbulent starts"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[33]
				{
				 type:    flt(64,IEEE)
				 alias:   "a"
				 flags:   PARAM
				 value:   -1.51
				 desc:    "tunable parameter: Coefficient a for damper characteristics"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealTunableParams[34]
				{
				 type:    flt(64,IEEE)
				 alias:   "b"
				 flags:   PARAM
				 value:   9.45
				 desc:    "tunable parameter: Coefficient b for damper characteristics"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealTunableParams[35]
				{
				 type:    flt(64,IEEE)
				 alias:   "yL"
				 flags:   PARAM
				 value:   0.16666666666666666
				 desc:    "tunable parameter: Lower value for damper curve"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealTunableParams[36]
				{
				 type:    flt(64,IEEE)
				 alias:   "yU"
				 flags:   PARAM
				 value:   0.61111111111111116
				 desc:    "tunable parameter: Upper value for damper curve"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[37]
				{
				 type:    flt(64,IEEE)
				 alias:   "k1"
				 flags:   PARAM
				 value:   0.45
				 desc:    "tunable parameter: Loss coefficient for y=1 (pressure drop divided by dynamic pressure)"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[38]
				{
				 type:    flt(64,IEEE)
				 alias:   "l"
				 flags:   PARAM
				 range:   <1E-10; 1>
				 value:   0.0001
				 desc:    "tunable parameter: Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealTunableParams[39]
				{
				 type:    flt(64,IEEE)
				 alias:   "l2"
				 flags:   PARAM
				 value:   0.01
				 desc:    "tunable parameter: Gain for mass flow increase if pressure is above nominal pressure"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealTunableParams[40]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltax"
				 flags:   PARAM
				 value:   0.02
				 desc:    "tunable parameter: Transition interval for flow rate"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealTunableParams[41]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_min"
				 flags:   PARAM
				 value:   0.02
				 desc:    "tunable parameter: Minimum value of control signal before zeroing of the opening"
		 addr:    0x080B2240
		}
				modelica_twovav_DSFMURealFixedDepParams[225]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[226]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[227]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[228]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[229]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[230]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[231]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[232]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[233]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[234]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[235]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[236]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[237]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: y values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[238]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[239]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[240]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[241]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[242]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[243]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[244]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[245]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[246]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[247]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[248]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[249]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[250]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: k values of sorted support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[47]
				{
				 type:    int(32)
				 alias:   "idx_sorted[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[48]
				{
				 type:    int(32)
				 alias:   "idx_sorted[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
				 addr:    0x080B1300
				}
				modelica_twovav_DSFMUIntegerFixedDepParams[49]
				{
				 type:    int(32)
				 alias:   "idx_sorted[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[50]
				{
				 type:    int(32)
				 alias:   "idx_sorted[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[51]
				{
				 type:    int(32)
				 alias:   "idx_sorted[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[52]
				{
				 type:    int(32)
				 alias:   "idx_sorted[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[53]
				{
				 type:    int(32)
				 alias:   "idx_sorted[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[54]
				{
				 type:    int(32)
				 alias:   "idx_sorted[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[55]
				{
				 type:    int(32)
				 alias:   "idx_sorted[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[56]
				{
				 type:    int(32)
				 alias:   "idx_sorted[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
			 addr:    0x080B1300
			}
				modelica_twovav_DSFMUIntegerFixedDepParams[57]
				{
				 type:    int(32)
				 alias:   "idx_sorted[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[58]
				{
				 type:    int(32)
				 alias:   "idx_sorted[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[59]
				{
				 type:    int(32)
				 alias:   "idx_sorted[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Indices of sorted support points"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMURealFixedDepParams[251]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[1]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[252]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[2]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[253]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[3]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[254]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[4]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[255]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[5]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[256]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[6]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[257]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[7]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[258]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[8]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[259]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[9]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[260]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[10]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[261]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[11]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[262]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[12]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[263]
				{
				 type:    flt(64,IEEE)
				 alias:   "invSplDer[13]"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Derivatives at support points for spline interpolation"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[72]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[207]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[208]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_small"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[73]
				{
				 type:    uint(8)
				 alias:   "show_T"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, if actual temperature at port is computed"
			 addr:    0x080B1260
			}
				modelica_twovav_DSFMURealFixedDepParams[209]
				{
				 type:    flt(64,IEEE)
				 alias:   "_m_flow_start"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[210]
				{
				 type:    flt(64,IEEE)
				 alias:   "_dp_start"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[74]
				{
				 type:    uint(8)
				 alias:   "from_dp"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[211]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure drop at nominal mass flow rate"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMUBooleanFixedDepParams[75]
				{
				 type:    uint(8)
				 alias:   "linearized"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[212]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_nominal_pos"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Absolute value of nominal flow rate"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[213]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_nominal_pos"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Absolute value of nominal pressure difference"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[76]
				{
				 type:    uint(8)
				 alias:   "use_inputFilter"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, if opening is filtered with a 2nd order CriticalDamping filter"
			 addr:    0x080B1260
			}
				modelica_twovav_DSFMUIntegerFixedDepParams[34]
				{
				 type:    int(32)
				 alias:   "order"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Order of filter"
		 addr:    0x080B1300
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[35]
				{
				 type:    enum EnumDT1
				 alias:   "init"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Type of initialization (no init/steady state/initial state/initial output)"
			 addr:    0x080B1300
			}
				modelica_twovav_DSFMUBooleanFixedDepParams[77]
				{
				 type:    uint(8)
				 alias:   "casePreInd"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: In case of PressureIndependent the model I/O is modified"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[220]
				{
				 type:    flt(64,IEEE)
				 alias:   "dpDamper_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure drop of fully open damper at nominal mass flow rate"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[221]
				{
				 type:    flt(64,IEEE)
				 alias:   "dpFixed_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[78]
				{
				 type:    uint(8)
				 alias:   "use_constant_density"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to use constant density for flow friction"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[222]
				{
				 type:    flt(64,IEEE)
				 alias:   "kFixed"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)."
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[45]
				{
				 type:    int(32)
				 alias:   "sizeSupSplBnd"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Number of support points on each quadratic domain for spline interpolation"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUIntegerFixedDepParams[46]
				{
				 type:    int(32)
				 alias:   "sizeSupSpl"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Total number of support points for spline interpolation"
			 addr:    0x080B1300
			}
				modelica_twovav_DSFMURealFixedDepParams[223]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: y values of unsorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[224]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[13]"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: y values of unsorted support points for spline interpolation"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[264]
				{
				 type:    flt(64,IEEE)
				 alias:   "y2dd"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Second derivative at second support point"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[265]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_y2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[266]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_y1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Support points for interpolation flow functions"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[267]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_x"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[268]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_x1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[269]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_x2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: "
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[270]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_smooth"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Smooth interpolation result between two flow regimes"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealOutputs[279]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_turbulent"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Turbulent flow if |m_flow| >= m_flow_turbulent"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[280]
				{
				 type:    flt(64,IEEE)
				 alias:   "eta_default"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Dynamic viscosity, used to compute transition to turbulent flow regime"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[294]
				{
				 type:    flt(64,IEEE)
				 alias:   "v_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Nominal face velocity"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[295]
				{
				 type:    flt(64,IEEE)
				 alias:   "A"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Face area"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[296]
				{
				 type:    flt(64,IEEE)
				 alias:   "k0"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Loss coefficient for y=0 (pressure drop divided by dynamic pressure)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[297]
				{
				 type:    flt(64,IEEE)
				 alias:   "rho"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "tunable local: Medium density"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[300]
				{
				 type:    flt(64,IEEE)
				 alias:   "rho_default"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "tunable local: Density, used to compute fluid volume"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[301]
				{
				 type:    flt(64,IEEE)
				 alias:   "facRouDuc"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Shape factor used to compute the hydraulic diameter for round ducts"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[302]
				{
				 type:    flt(64,IEEE)
				 alias:   "kL"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Loss coefficient at the lower limit of the exponential characteristics"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[303]
				{
				 type:    flt(64,IEEE)
				 alias:   "kU"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Loss coefficient at the upper limit of the exponential characteristics"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[304]
				{
				 type:    flt(64,IEEE)
				 alias:   "cL[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y < yl"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[305]
				{
				 type:    flt(64,IEEE)
				 alias:   "cL[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y < yl"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[306]
				{
				 type:    flt(64,IEEE)
				 alias:   "cL[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y < yl"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[307]
				{
				 type:    flt(64,IEEE)
				 alias:   "cU[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y > yu"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[308]
				{
				 type:    flt(64,IEEE)
				 alias:   "cU[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y > yu"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[309]
				{
				 type:    flt(64,IEEE)
				 alias:   "cU[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Polynomial coefficients for curve fit for y > yu"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[310]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDamMax"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[311]
				{
				 type:    flt(64,IEEE)
				 alias:   "kTotMax"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[312]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDamMin"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[313]
				{
				 type:    flt(64,IEEE)
				 alias:   "kTotMin"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[317]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[318]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[319]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[4]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[320]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[5]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[321]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[6]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[322]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[7]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[323]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[8]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[324]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[9]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[325]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[10]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[326]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[11]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[327]
				{
				 type:    flt(64,IEEE)
				 alias:   "ySupSpl_raw[12]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: y values of unsorted support points for spline interpolation"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[328]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[329]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[2]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[330]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[3]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[331]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[4]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[332]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[5]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[333]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[6]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[334]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[7]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[335]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[8]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[336]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[9]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[337]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[10]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[338]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[11]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[339]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[12]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[340]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSupSpl_raw[13]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: k values of unsorted support points for spline interpolation"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[341]
				{
				 type:    flt(64,IEEE)
				 alias:   "coeff1"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Parameter for avoiding unnecessary computations"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[342]
				{
				 type:    flt(64,IEEE)
				 alias:   "coeff2"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Parameter for avoiding unnecessary computations"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[277]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[278]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Pressure difference between port_a and port_b"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[281]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Actuator position (0: closed, 1: open)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[282]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_actual"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Actual actuator position"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[283]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output connector for internal use (= y_actual if not casePreInd)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[284]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_filtered"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Filtered valve position in the range 0..1"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[298]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDam"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[299]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Flow coefficient of damper plus fixed resistance, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[314]
				{
				 type:    flt(64,IEEE)
				 alias:   "phi"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Ratio actual to nominal mass flow rate of damper, phi=kDam(y)/kDam(y=1)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[315]
				{
				 type:    flt(64,IEEE)
				 alias:   "kSquInv"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Square inverse of flow coefficient (damper plus fixed resistance)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[316]
				{
				 type:    flt(64,IEEE)
				 alias:   "kDamSquInv"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Square inverse of flow coefficient (damper only)"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[343]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_set"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Requested mass flow rate"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[344]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_min"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Minimum pressure difference required for delivering requested mass flow rate"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[345]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_x"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[346]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_x1"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[347]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp_x2"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[348]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_y2"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: "
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[349]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_y1"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Support points for interpolation flow functions"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[350]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_smooth"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Smooth interpolation result between two flow regimes"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[351]
				{
				 type:    flt(64,IEEE)
				 alias:   "y_actual_smooth"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Fractional opening computed based on m_flow_smooth and dp"
 addr:    0x0818AF00
}
				
				group "sta_default"
					modelica_twovav_DSFMURealFixedParams[22]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   PARAM|INITONLY
					 range:   <0; 1>
					 value:   0.01
					 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B23E0
}
					modelica_twovav_DSFMURealFixedParams[23]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   PARAM|INITONLY
					 range:   <0; 1>
					 value:   0.99
					 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B23E0
}
					modelica_twovav_DSFMURealTunableParams[27]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   PARAM
					 range:   <0; 100000000>
					 value:   101325
					 desc:    "tunable parameter: Absolute pressure of medium"
			 addr:    0x080B2240
			}
					modelica_twovav_DSFMURealTunableParams[28]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   PARAM
					 range:   <1; 10000>
					 value:   293.15
					 desc:    "tunable parameter: Temperature of medium"
 addr:    0x080B2240
}
				
				endgroup -- "sta_default"
				
				group "filter"
					modelica_twovav_DSFMURealFixedParams[26]
					{
					 type:    flt(64,IEEE)
					 alias:   "A_ripple"
					 flags:   PARAM|INITONLY
					 value:   0.5
					 desc:    "fixed parameter (used for initialization): Pass band ripple for Chebyshev filter (otherwise not used); > 0 required"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMURealFixedParams[27]
					{
					 type:    flt(64,IEEE)
					 alias:   "f_min"
					 flags:   PARAM|INITONLY
					 value:   0
					 desc:    "fixed parameter (used for initialization): Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain)"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMUBooleanFixedParams[1]
					{
					 type:    uint(8)
					 alias:   "normalized"
					 flags:   PARAM|INITONLY
					 range:   <0; 1>
					 value:   1
					 desc:    "fixed parameter (used for initialization): = true, if amplitude at f_cut = -3db, otherwise unmodified filter"
			 addr:    0x080B23D8
			}
					modelica_twovav_DSFMURealFixedParams[28]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_start[1]"
					 flags:   PARAM|INITONLY
					 value:   0
					 desc:    "fixed parameter (used for initialization): Initial or guess values of states"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMURealFixedParams[29]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_start[2]"
					 flags:   PARAM|INITONLY
					 value:   0
					 desc:    "fixed parameter (used for initialization): Initial or guess values of states"
 addr:    0x080B23E0
}
					modelica_twovav_DSFMURealTunableParams[29]
					{
					 type:    flt(64,IEEE)
					 alias:   "gain"
					 flags:   PARAM
					 value:   1
					 desc:    "tunable parameter: Gain (= amplitude of frequency response at zero frequency)"
		 addr:    0x080B2240
		}
					modelica_twovav_DSFMURealTunableParams[30]
					{
					 type:    flt(64,IEEE)
					 alias:   "u_nominal"
					 flags:   PARAM
					 value:   1
					 desc:    "tunable parameter: Nominal value of input (used for scaling the states)"
			 addr:    0x080B2240
			}
					modelica_twovav_DSFMURealFixedDepParams[216]
					{
					 type:    flt(64,IEEE)
					 alias:   "cr[1]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[217]
					{
					 type:    flt(64,IEEE)
					 alias:   "cr[2]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[218]
					{
					 type:    flt(64,IEEE)
					 alias:   "r[1]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[219]
					{
					 type:    flt(64,IEEE)
					 alias:   "r[2]"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: "
 addr:    0x080B1420
}
					modelica_twovav_DSFMUIntegerFixedDepParams[36]
					{
					 type:    enum EnumDT2
					 alias:   "analogFilter"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI)"
 addr:    0x080B1300
}
					modelica_twovav_DSFMUIntegerFixedDepParams[37]
					{
					 type:    enum EnumDT3
					 alias:   "filterType"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Type of filter (LowPass/HighPass/BandPass/BandStop)"
 addr:    0x080B1300
}
					modelica_twovav_DSFMUIntegerFixedDepParams[38]
					{
					 type:    int(32)
					 alias:   "order"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Order of filter"
			 addr:    0x080B1300
			}
					modelica_twovav_DSFMUIntegerFixedDepParams[39]
					{
					 type:    enum EnumDT1
					 alias:   "init"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Type of initialization (no init/steady state/initial state/initial output)"
 addr:    0x080B1300
}
					modelica_twovav_DSFMUIntegerFixedDepParams[40]
					{
					 type:    int(32)
					 alias:   "nx"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[41]
					{
					 type:    int(32)
					 alias:   "ncr"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
 addr:    0x080B1300
}
					modelica_twovav_DSFMUIntegerFixedDepParams[42]
					{
					 type:    int(32)
					 alias:   "nc0"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[43]
					{
					 type:    int(32)
					 alias:   "na"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMUIntegerFixedDepParams[44]
					{
					 type:    int(32)
					 alias:   "nr"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: "
		 addr:    0x080B1300
		}
					modelica_twovav_DSFMURealFixedDepParams[214]
					{
					 type:    flt(64,IEEE)
					 alias:   "f_cut"
					 flags:   OUTPUT|READONLY
					 desc:    "fixed local: Cut-off frequency"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[215]
					{
					 type:    flt(64,IEEE)
					 alias:   "y_start"
					 flags:   OUTPUT|READONLY
					 desc:    "fixed local: Initial value of output"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealOutputs[285]
					{
					 type:    flt(64,IEEE)
					 alias:   "u"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Connector of Real input signal"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[286]
					{
					 type:    flt(64,IEEE)
					 alias:   "y"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Connector of Real output signal"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[287]
					{
					 type:    flt(64,IEEE)
					 alias:   "x[1]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Filter states"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[289]
					{
					 type:    flt(64,IEEE)
					 alias:   "x[2]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Filter states"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[291]
					{
					 type:    flt(64,IEEE)
					 alias:   "uu[1]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: "
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[292]
					{
					 type:    flt(64,IEEE)
					 alias:   "uu[2]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: "
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[293]
					{
					 type:    flt(64,IEEE)
					 alias:   "uu[3]"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: "
			 addr:    0x0818AF00
			}
				
				endgroup -- "filter"
				
				group "port_a"
					modelica_twovav_DSFMURealOutputs[271]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[272]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[269]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 100000>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[270]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_a"
				
				group "port_b"
					modelica_twovav_DSFMURealOutputs[274]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[276]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[273]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[275]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_b"
			
			endgroup -- "vav"
			
			group "terHea"
				modelica_twovav_DSFMURealFixedParams[36]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_a1_nominal"
				 flags:   PARAM|INITONLY
				 value:   289.85
				 desc:    "fixed parameter (used for initialization): Nominal temperature at port a1"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealFixedParams[37]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_a2_nominal"
				 flags:   PARAM|INITONLY
				 value:   355.35
				 desc:    "fixed parameter (used for initialization): Nominal temperature at port a2"
		 addr:    0x080B23E0
		}
				modelica_twovav_DSFMURealTunableParams[42]
				{
				 type:    flt(64,IEEE)
				 alias:   "delta"
				 flags:   PARAM
				 value:   0.001
				 desc:    "tunable parameter: Parameter used for smoothing"
			 addr:    0x080B2240
			}
				modelica_twovav_DSFMURealTunableParams[43]
				{
				 type:    flt(64,IEEE)
				 alias:   "r_nominal"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   0.66666666666666663
				 desc:    "tunable parameter: Ratio between air-side and water-side convective heat transfer (hA-value) at nominal condition"
			 addr:    0x080B2240
			}
				modelica_twovav_DSFMURealFixedDepParams[372]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp1_default"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 1 at default medium state"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[373]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp2_default"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 2 at default medium state"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[374]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMin_flow_small"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Small value for smoothing of minimum heat capacity flow rate"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[378]
				{
				 type:    flt(64,IEEE)
				 alias:   "eps_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal heat transfer effectiveness"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[379]
				{
				 type:    flt(64,IEEE)
				 alias:   "UA_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal UA value"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[380]
				{
				 type:    flt(64,IEEE)
				 alias:   "NTU_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal number of transfer units"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[387]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp1_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 1 at nominal condition"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[388]
				{
				 type:    flt(64,IEEE)
				 alias:   "cp2_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Specific heat capacity of medium 2 at nominal condition"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[389]
				{
				 type:    flt(64,IEEE)
				 alias:   "C1_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal capacity flow rate of Medium 1"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[390]
				{
				 type:    flt(64,IEEE)
				 alias:   "C2_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal capacity flow rate of Medium 2"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[391]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMin_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Minimal capacity flow rate at nominal condition"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[392]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMax_flow_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Maximum capacity flow rate at nominal condition"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[393]
				{
				 type:    flt(64,IEEE)
				 alias:   "Z_nominal"
				 flags:   PARAM|READONLY
				 range:   <0; 1>
				 desc:    "fixed calculatedParameter: Ratio of capacity flow rate at nominal condition"
				 addr:    0x080B1420
				}
				modelica_twovav_DSFMURealFixedDepParams[394]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_b1_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal temperature at port b1"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[395]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_b2_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Nominal temperature at port b2"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUIntegerFixedDepParams[61]
				{
				 type:    enum EnumDT0
				 alias:   "flowRegime_nominal"
				 flags:   PARAM|READONLY
				 desc:    "fixed calculatedParameter: Heat exchanger flow regime at nominal flow rates"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUBooleanFixedDepParams[79]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1"
 addr:    0x080B1260
}
				modelica_twovav_DSFMUBooleanFixedDepParams[80]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[272]
				{
				 type:    flt(64,IEEE)
				 alias:   "m1_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[273]
				{
				 type:    flt(64,IEEE)
				 alias:   "m2_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[274]
				{
				 type:    flt(64,IEEE)
				 alias:   "m1_flow_small"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "constant local: Small mass flow rate for regularization of zero flow"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[275]
				{
				 type:    flt(64,IEEE)
				 alias:   "m2_flow_small"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000>
				 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[81]
				{
				 type:    uint(8)
				 alias:   "show_T"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, if actual temperature at port is computed"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[276]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference between port_a1 and port_b1"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[277]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference between port_a2 and port_b2"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMUBooleanFixedDepParams[82]
				{
				 type:    uint(8)
				 alias:   "computeFlowResistance1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
			 addr:    0x080B1260
			}
				modelica_twovav_DSFMUBooleanFixedDepParams[83]
				{
				 type:    uint(8)
				 alias:   "from_dp1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[279]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp1_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[84]
				{
				 type:    uint(8)
				 alias:   "linearizeFlowResistance1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[280]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltaM1"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[85]
				{
				 type:    uint(8)
				 alias:   "computeFlowResistance2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[86]
				{
				 type:    uint(8)
				 alias:   "from_dp2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[281]
				{
				 type:    flt(64,IEEE)
				 alias:   "dp2_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Pressure difference"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[87]
				{
				 type:    uint(8)
				 alias:   "linearizeFlowResistance2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[282]
				{
				 type:    flt(64,IEEE)
				 alias:   "deltaM2"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[88]
				{
				 type:    uint(8)
				 alias:   "prescribedHeatFlowRate1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if the heat flow rate into fluid 1 is not a function of the component temperature"
 addr:    0x080B1260
}
				modelica_twovav_DSFMUBooleanFixedDepParams[89]
				{
				 type:    uint(8)
				 alias:   "prescribedHeatFlowRate2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if the heat flow rate into fluid 2 is not a function of the component temperature"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[283]
				{
				 type:    flt(64,IEEE)
				 alias:   "mWat1_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "constant local: Moisture mass flow rate added to the medium 1"
			 addr:    0x080B1420
			}
				modelica_twovav_DSFMURealFixedDepParams[284]
				{
				 type:    flt(64,IEEE)
				 alias:   "mWat2_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "constant local: Moisture mass flow rate added to the medium 2"
 addr:    0x080B1420
}
				modelica_twovav_DSFMUBooleanFixedDepParams[90]
				{
				 type:    uint(8)
				 alias:   "sensibleOnly1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if sensible exchange only for medium 1"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[91]
				{
				 type:    uint(8)
				 alias:   "sensibleOnly2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true if sensible exchange only for medium 2"
 addr:    0x080B1260
}
				modelica_twovav_DSFMURealFixedDepParams[375]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_a2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Fraction of incoming state taken from port a2 (used to avoid excessive calls to regStep)"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealFixedDepParams[376]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_b2"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Fraction of incoming state taken from port b2 (used to avoid excessive calls to regStep)"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[60]
				{
				 type:    enum EnumDT4
				 alias:   "configuration"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Heat exchanger configuration"
 addr:    0x080B1300
}
				modelica_twovav_DSFMUBooleanFixedDepParams[130]
				{
				 type:    uint(8)
				 alias:   "use_Q_flow_nominal"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to specify Q_flow_nominal and temperatures, or to false to specify effectiveness"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[377]
				{
				 type:    flt(64,IEEE)
				 alias:   "Q_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal heat transfer"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealOutputs[366]
				{
				 type:    flt(64,IEEE)
				 alias:   "m2_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "tunable local: Mass flow rate from port_a2 to port_b2 (m2_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[440]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in2"
				 flags:   OUTPUT|READONLY
				 range:   <1; 10000>
				 desc:    "tunable local: Inlet temperature medium 2"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[442]
				{
				 type:    flt(64,IEEE)
				 alias:   "C2_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Heat capacity flow rate medium 2"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMUIntegerOutputs[1]
				{
				 type:    enum EnumDT0
				 alias:   "flowRegime"
				 flags:   OUTPUT|READONLY
				 desc:    "discrete local: Heat exchanger flow regime"
 addr:    0x0818AEF0
}
				modelica_twovav_DSFMURealOutputs[365]
				{
				 type:    flt(64,IEEE)
				 alias:   "m1_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from port_a1 to port_b1 (m1_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[378]
				{
				 type:    flt(64,IEEE)
				 alias:   "Q1_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Heat transferred into the medium 1"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[379]
				{
				 type:    flt(64,IEEE)
				 alias:   "Q2_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Heat transferred into the medium 2"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[439]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in1"
				 flags:   OUTPUT|READONLY
				 range:   <1; 10000>
				 desc:    "continuous local: Inlet temperature medium 1"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[441]
				{
				 type:    flt(64,IEEE)
				 alias:   "C1_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Heat capacity flow rate medium 1"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[443]
				{
				 type:    flt(64,IEEE)
				 alias:   "CMin_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Minimum heat capacity flow rate"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[444]
				{
				 type:    flt(64,IEEE)
				 alias:   "QMax_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Maximum heat flow rate into medium 1"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[445]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_a1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Fraction of incoming state taken from port a2 (used to avoid excessive calls to regStep)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[446]
				{
				 type:    flt(64,IEEE)
				 alias:   "fra_b1"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Fraction of incoming state taken from port b2 (used to avoid excessive calls to regStep)"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[447]
				{
				 type:    flt(64,IEEE)
				 alias:   "UA"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: UA value"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[448]
				{
				 type:    flt(64,IEEE)
				 alias:   "eps"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "continuous local: Heat exchanger effectiveness"
 addr:    0x0818AF00
}
				
				group "bal1"
					modelica_twovav_DSFMUBooleanFixedDepParams[92]
					{
					 type:    uint(8)
					 alias:   "allowFlowReversal"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[285]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[286]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_small"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Small mass flow rate for regularization of zero flow"
			 addr:    0x080B1420
			}
					modelica_twovav_DSFMUBooleanFixedDepParams[93]
					{
					 type:    uint(8)
					 alias:   "show_T"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, if actual temperature at port is computed"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[287]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference between port_a and port_b"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[288]
					{
					 type:    flt(64,IEEE)
					 alias:   "_m_flow_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[289]
					{
					 type:    flt(64,IEEE)
					 alias:   "_dp_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[94]
					{
					 type:    uint(8)
					 alias:   "computeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
 addr:    0x080B1260
}
					modelica_twovav_DSFMUBooleanFixedDepParams[95]
					{
					 type:    uint(8)
					 alias:   "from_dp"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[290]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[96]
					{
					 type:    uint(8)
					 alias:   "linearizeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
			 addr:    0x080B1260
			}
					modelica_twovav_DSFMURealFixedDepParams[291]
					{
					 type:    flt(64,IEEE)
					 alias:   "deltaM"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[97]
					{
					 type:    uint(8)
					 alias:   "sensibleOnly"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if sensible exchange only"
 addr:    0x080B1260
}
					modelica_twovav_DSFMUBooleanFixedDepParams[98]
					{
					 type:    uint(8)
					 alias:   "prescribedHeatFlowRate"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if the heat flow rate is not a function of the component temperature"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[292]
					{
					 type:    flt(64,IEEE)
					 alias:   "mWat_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Moisture mass flow rate added to the medium"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[388]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[389]
					{
					 type:    flt(64,IEEE)
					 alias:   "Q_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Heat transferred into the medium"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[412]
					{
					 type:    flt(64,IEEE)
					 alias:   "hOut"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Leaving temperature of the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[413]
					{
					 type:    flt(64,IEEE)
					 alias:   "XiOut[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "continuous local: Leaving species concentration of the component"
		 addr:    0x0818AF00
		}
					
					group "preDro"
						modelica_twovav_DSFMUBooleanFixedDepParams[106]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[315]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[316]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[107]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[317]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[318]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
				 addr:    0x080B1420
				}
						modelica_twovav_DSFMURealFixedDepParams[319]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[108]
						{
						 type:    uint(8)
						 alias:   "from_dp"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
			 addr:    0x080B1260
			}
						modelica_twovav_DSFMURealFixedDepParams[320]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure drop at nominal mass flow rate"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[109]
						{
						 type:    uint(8)
						 alias:   "linearized"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
			 addr:    0x080B1260
			}
						modelica_twovav_DSFMURealFixedDepParams[321]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_turbulent"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Turbulent flow if |m_flow| >= m_flow_turbulent"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[323]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[324]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal pressure difference"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[325]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaM"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Fraction of nominal mass flow rate where transition to turbulent occurs"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[326]
						{
						 type:    flt(64,IEEE)
						 alias:   "k"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[110]
						{
						 type:    uint(8)
						 alias:   "computeFlowResistance"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag to enable/disable computation of flow resistance"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[327]
						{
						 type:    flt(64,IEEE)
						 alias:   "coeff"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Precomputed coefficient to avoid division by parameter"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[322]
						{
						 type:    flt(64,IEEE)
						 alias:   "eta_default"
						 flags:   OUTPUT|READONLY
						 desc:    "fixed local: Dynamic viscosity, used to compute transition to turbulent flow regime"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealOutputs[411]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
						
						group "sta_default"
							modelica_twovav_DSFMURealFixedParams[30]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   PARAM|INITONLY
							 range:   <0; 100000000>
							 value:   101325
							 desc:    "fixed parameter (used for initialization): Absolute pressure of medium"
 addr:    0x080B23E0
}
							modelica_twovav_DSFMURealFixedParams[31]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   PARAM|INITONLY
							 range:   <1; 10000>
							 value:   293.15
							 desc:    "fixed parameter (used for initialization): Temperature of medium"
 addr:    0x080B23E0
}
							modelica_twovav_DSFMURealFixedParams[32]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[1]"
							 flags:   PARAM|INITONLY
							 range:   <0; 1>
							 value:   0.01
							 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
							 addr:    0x080B23E0
							}
							modelica_twovav_DSFMURealFixedParams[33]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[2]"
							 flags:   PARAM|INITONLY
							 range:   <0; 1>
							 value:   0.99
							 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
							 addr:    0x080B23E0
							}
						
						endgroup -- "sta_default"
						
						group "port_a"
							modelica_twovav_DSFMURealOutputs[406]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[403]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-1E+60; 100000>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[404]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[405]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						
						endgroup -- "port_a"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[409]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[410]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[407]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 1E+60>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[408]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
							 addr:    0x0818AF00
							}
						
						endgroup -- "port_b"
					
					endgroup -- "preDro"
					
					group "vol"
						modelica_twovav_DSFMUBooleanFixedDepParams[99]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[293]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
			 addr:    0x080B1420
			}
						modelica_twovav_DSFMURealFixedDepParams[294]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[100]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[295]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[296]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[297]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[101]
						{
						 type:    uint(8)
						 alias:   "simplify_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[102]
						{
						 type:    uint(8)
						 alias:   "prescribedHeatFlowRate"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true if the heat flow rate is not a function of a temperature difference to the fluid temperature"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[103]
						{
						 type:    uint(8)
						 alias:   "use_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for moisture mass flow rate"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[104]
						{
						 type:    uint(8)
						 alias:   "use_C_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for trace substance"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[105]
						{
						 type:    uint(8)
						 alias:   "use_m_flowInv"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag, true if m_flowInv is used in the model"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[298]
						{
						 type:    flt(64,IEEE)
						 alias:   "s[1]"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Vector with zero everywhere except where species is"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[299]
						{
						 type:    flt(64,IEEE)
						 alias:   "mXi_flow[1]"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Mass flow rates of independent substances added to the medium"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[300]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Smoothing region for inverseXRegularized"
			 addr:    0x080B1420
			}
						modelica_twovav_DSFMURealFixedDepParams[301]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaInvReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Inverse value of delta for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[302]
						{
						 type:    flt(64,IEEE)
						 alias:   "aReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[303]
						{
						 type:    flt(64,IEEE)
						 alias:   "bReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[304]
						{
						 type:    flt(64,IEEE)
						 alias:   "cReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[305]
						{
						 type:    flt(64,IEEE)
						 alias:   "dReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[306]
						{
						 type:    flt(64,IEEE)
						 alias:   "eReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[307]
						{
						 type:    flt(64,IEEE)
						 alias:   "fReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[312]
						{
						 type:    flt(64,IEEE)
						 alias:   "cp_default"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Specific heat capacity, used to verify energy conservation"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[313]
						{
						 type:    flt(64,IEEE)
						 alias:   "dTMax"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Maximum temperature difference across the StaticTwoPortConservationEquation"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[314]
						{
						 type:    flt(64,IEEE)
						 alias:   "mWat_flow_internal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Needed to connect to conditional connector"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealOutputs[398]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[399]
						{
						 type:    flt(64,IEEE)
						 alias:   "Q_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Sensible plus latent heat flow rate transferred into the medium"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[400]
						{
						 type:    flt(64,IEEE)
						 alias:   "hOut"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Leaving specific enthalpy of the component"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[401]
						{
						 type:    flt(64,IEEE)
						 alias:   "XiOut[1]"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "continuous local: Leaving species concentration of the component"
			 addr:    0x0818AF00
			}
						modelica_twovav_DSFMURealOutputs[402]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flowInv"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Regularization of 1/m_flow of port_a"
				 addr:    0x0818AF00
				}
						
						group "state_default"
							modelica_twovav_DSFMURealFixedDepParams[308]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[309]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   OUTPUT|READONLY
							 range:   <1; 10000>
							 desc:    "constant local: Temperature of medium"
							 addr:    0x080B1420
							}
							modelica_twovav_DSFMURealFixedDepParams[310]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
							 addr:    0x080B1420
							}
							modelica_twovav_DSFMURealFixedDepParams[311]
							{
							 type:    flt(64,IEEE)
							 alias:   "X[2]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B1420
}
						
						endgroup -- "state_default"
						
						group "port_a"
							modelica_twovav_DSFMURealOutputs[393]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[390]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-1E+60; 100000>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[391]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[392]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						
						endgroup -- "port_a"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[397]
							{
							 type:    flt(64,IEEE)
							 alias:   "Xi_outflow[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[394]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 1E+60>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[395]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[396]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
						
						endgroup -- "port_b"
					
					endgroup -- "vol"
					
					group "masExc"
						modelica_twovav_DSFMURealFixedDepParams[328]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Value of Real output"
		 addr:    0x080B1420
		}
					
					endgroup -- "masExc"
					
					group "port_a"
						modelica_twovav_DSFMURealOutputs[383]
						{
						 type:    flt(64,IEEE)
						 alias:   "Xi_outflow[1]"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[380]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <-1E+60; 100000>
						 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[381]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[382]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					
					endgroup -- "port_a"
					
					group "port_b"
						modelica_twovav_DSFMURealOutputs[387]
						{
						 type:    flt(64,IEEE)
						 alias:   "Xi_outflow[1]"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[384]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <-100000; 1E+60>
						 desc:    "continuous local: Mass flow rate from the connection point into the component"
			 addr:    0x0818AF00
			}
						modelica_twovav_DSFMURealOutputs[385]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[386]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					
					endgroup -- "port_b"
					
					group "heaInp"
						modelica_twovav_DSFMURealOutputs[414]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Value of Real output"
 addr:    0x0818AF00
}
					
					endgroup -- "heaInp"
				
				endgroup -- "bal1"
				
				group "bal2"
					modelica_twovav_DSFMUBooleanFixedDepParams[111]
					{
					 type:    uint(8)
					 alias:   "allowFlowReversal"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[330]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[331]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_small"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[112]
					{
					 type:    uint(8)
					 alias:   "show_T"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[332]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference between port_a and port_b"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[333]
					{
					 type:    flt(64,IEEE)
					 alias:   "_m_flow_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[334]
					{
					 type:    flt(64,IEEE)
					 alias:   "_dp_start"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
					modelica_twovav_DSFMUBooleanFixedDepParams[113]
					{
					 type:    uint(8)
					 alias:   "computeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: =true, compute flow resistance. Set to false to assume no friction"
 addr:    0x080B1260
}
					modelica_twovav_DSFMUBooleanFixedDepParams[114]
					{
					 type:    uint(8)
					 alias:   "from_dp"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[335]
					{
					 type:    flt(64,IEEE)
					 alias:   "dp_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Pressure difference"
				 addr:    0x080B1420
				}
					modelica_twovav_DSFMUBooleanFixedDepParams[115]
					{
					 type:    uint(8)
					 alias:   "linearizeFlowResistance"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
				 addr:    0x080B1260
				}
					modelica_twovav_DSFMURealFixedDepParams[336]
					{
					 type:    flt(64,IEEE)
					 alias:   "deltaM"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Fraction of nominal flow rate where flow transitions to laminar"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[116]
					{
					 type:    uint(8)
					 alias:   "sensibleOnly"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if sensible exchange only"
			 addr:    0x080B1260
			}
					modelica_twovav_DSFMUBooleanFixedDepParams[117]
					{
					 type:    uint(8)
					 alias:   "prescribedHeatFlowRate"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to true if the heat flow rate is not a function of the component temperature"
 addr:    0x080B1260
}
					modelica_twovav_DSFMURealFixedDepParams[337]
					{
					 type:    flt(64,IEEE)
					 alias:   "mWat_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Moisture mass flow rate added to the medium"
			 addr:    0x080B1420
			}
					modelica_twovav_DSFMURealOutputs[420]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[421]
					{
					 type:    flt(64,IEEE)
					 alias:   "Q_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Heat transferred into the medium"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[437]
					{
					 type:    flt(64,IEEE)
					 alias:   "hOut"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Leaving temperature of the component"
		 addr:    0x0818AF00
		}
					
					group "preDro"
						modelica_twovav_DSFMUBooleanFixedDepParams[125]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[358]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[359]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[126]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[360]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[361]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[362]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[127]
						{
						 type:    uint(8)
						 alias:   "from_dp"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMURealFixedDepParams[363]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure drop at nominal mass flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[128]
						{
						 type:    uint(8)
						 alias:   "linearized"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
						modelica_twovav_DSFMURealFixedDepParams[364]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_turbulent"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Turbulent flow if |m_flow| >= m_flow_turbulent"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[365]
						{
						 type:    flt(64,IEEE)
						 alias:   "eta_default"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Dynamic viscosity, used to compute transition to turbulent flow regime"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[366]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[367]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp_nominal_pos"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Absolute value of nominal pressure difference"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[368]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaM"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Fraction of nominal mass flow rate where transition to turbulent occurs"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[369]
						{
						 type:    flt(64,IEEE)
						 alias:   "k"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[129]
						{
						 type:    uint(8)
						 alias:   "computeFlowResistance"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag to enable/disable computation of flow resistance"
				 addr:    0x080B1260
				}
						modelica_twovav_DSFMURealFixedDepParams[370]
						{
						 type:    flt(64,IEEE)
						 alias:   "coeff"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Precomputed coefficient to avoid division by parameter"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealOutputs[436]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "tunable local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
				 addr:    0x0818AF00
				}
						
						group "sta_default"
							modelica_twovav_DSFMURealFixedParams[34]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   PARAM|INITONLY
							 range:   <0; 100000000>
							 value:   300000
							 desc:    "fixed parameter (used for initialization): Absolute pressure of medium"
 addr:    0x080B23E0
}
							modelica_twovav_DSFMURealFixedParams[35]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   PARAM|INITONLY
							 range:   <1; 10000>
							 value:   293.15
							 desc:    "fixed parameter (used for initialization): Temperature of medium"
 addr:    0x080B23E0
}
						
						endgroup -- "sta_default"
						
						group "port_a"
							modelica_twovav_DSFMURealFixedDepParams[357]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealOutputs[431]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000>
							 desc:    "tunable local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[432]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						
						endgroup -- "port_a"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[435]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[433]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 0>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[434]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
						
						endgroup -- "port_b"
					
					endgroup -- "preDro"
					
					group "port_a"
						modelica_twovav_DSFMURealFixedDepParams[329]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealOutputs[415]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000>
						 desc:    "tunable local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[416]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					
					endgroup -- "port_a"
					
					group "vol"
						modelica_twovav_DSFMUBooleanFixedDepParams[118]
						{
						 type:    uint(8)
						 alias:   "allowFlowReversal"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[339]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_nominal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[340]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow_small"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Small mass flow rate for regularization of zero flow"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[119]
						{
						 type:    uint(8)
						 alias:   "show_T"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMURealFixedDepParams[341]
						{
						 type:    flt(64,IEEE)
						 alias:   "dp"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Pressure difference between port_a and port_b"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[342]
						{
						 type:    flt(64,IEEE)
						 alias:   "_m_flow_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[343]
						{
						 type:    flt(64,IEEE)
						 alias:   "_dp_start"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
 addr:    0x080B1420
}
						modelica_twovav_DSFMUBooleanFixedDepParams[120]
						{
						 type:    uint(8)
						 alias:   "simplify_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[121]
						{
						 type:    uint(8)
						 alias:   "prescribedHeatFlowRate"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true if the heat flow rate is not a function of a temperature difference to the fluid temperature"
		 addr:    0x080B1260
		}
						modelica_twovav_DSFMUBooleanFixedDepParams[122]
						{
						 type:    uint(8)
						 alias:   "use_mWat_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for moisture mass flow rate"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[123]
						{
						 type:    uint(8)
						 alias:   "use_C_flow"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Set to true to enable input connector for trace substance"
 addr:    0x080B1260
}
						modelica_twovav_DSFMUBooleanFixedDepParams[124]
						{
						 type:    uint(8)
						 alias:   "use_m_flowInv"
						 flags:   OUTPUT|READONLY
						 range:   <0; 1>
						 desc:    "constant local: Flag, true if m_flowInv is used in the model"
			 addr:    0x080B1260
			}
						modelica_twovav_DSFMURealFixedDepParams[344]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Smoothing region for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[345]
						{
						 type:    flt(64,IEEE)
						 alias:   "deltaInvReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Inverse value of delta for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[346]
						{
						 type:    flt(64,IEEE)
						 alias:   "aReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[347]
						{
						 type:    flt(64,IEEE)
						 alias:   "bReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[348]
						{
						 type:    flt(64,IEEE)
						 alias:   "cReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[349]
						{
						 type:    flt(64,IEEE)
						 alias:   "dReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[350]
						{
						 type:    flt(64,IEEE)
						 alias:   "eReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[351]
						{
						 type:    flt(64,IEEE)
						 alias:   "fReg"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Polynomial coefficient for inverseXRegularized"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[354]
						{
						 type:    flt(64,IEEE)
						 alias:   "cp_default"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Specific heat capacity, used to verify energy conservation"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealFixedDepParams[355]
						{
						 type:    flt(64,IEEE)
						 alias:   "dTMax"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Maximum temperature difference across the StaticTwoPortConservationEquation"
 addr:    0x080B1420
}
						modelica_twovav_DSFMURealFixedDepParams[356]
						{
						 type:    flt(64,IEEE)
						 alias:   "mWat_flow_internal"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Needed to connect to conditional connector"
		 addr:    0x080B1420
		}
						modelica_twovav_DSFMURealOutputs[427]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "tunable local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[430]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flowInv"
						 flags:   OUTPUT|READONLY
						 desc:    "tunable local: Regularization of 1/m_flow of port_a"
 addr:    0x0818AF00
}
						modelica_twovav_DSFMURealOutputs[428]
						{
						 type:    flt(64,IEEE)
						 alias:   "Q_flow"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Sensible plus latent heat flow rate transferred into the medium"
			 addr:    0x0818AF00
			}
						modelica_twovav_DSFMURealOutputs[429]
						{
						 type:    flt(64,IEEE)
						 alias:   "hOut"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Leaving specific enthalpy of the component"
				 addr:    0x0818AF00
				}
						
						group "port_a"
							modelica_twovav_DSFMURealFixedDepParams[338]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealOutputs[422]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000>
							 desc:    "tunable local: Mass flow rate from the connection point into the component"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[423]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
							 addr:    0x0818AF00
							}
						
						endgroup -- "port_a"
						
						group "state_default"
							modelica_twovav_DSFMURealFixedDepParams[352]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[353]
							{
							 type:    flt(64,IEEE)
							 alias:   "T"
							 flags:   OUTPUT|READONLY
							 range:   <1; 10000>
							 desc:    "constant local: Temperature of medium"
 addr:    0x080B1420
}
						
						endgroup -- "state_default"
						
						group "port_b"
							modelica_twovav_DSFMURealOutputs[424]
							{
							 type:    flt(64,IEEE)
							 alias:   "m_flow"
							 flags:   OUTPUT|READONLY
							 range:   <-100000; 0>
							 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
							modelica_twovav_DSFMURealOutputs[425]
							{
							 type:    flt(64,IEEE)
							 alias:   "p"
							 flags:   OUTPUT|READONLY
							 range:   <0; 100000000>
							 desc:    "continuous local: Thermodynamic pressure in the connection point"
							 addr:    0x0818AF00
							}
							modelica_twovav_DSFMURealOutputs[426]
							{
							 type:    flt(64,IEEE)
							 alias:   "h_outflow"
							 flags:   OUTPUT|READONLY
							 range:   <-10000000000; 10000000000>
							 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
						
						endgroup -- "port_b"
					
					endgroup -- "vol"
					
					group "masExc"
						modelica_twovav_DSFMURealFixedDepParams[371]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "constant local: Value of Real output"
 addr:    0x080B1420
}
					
					endgroup -- "masExc"
					
					group "port_b"
						modelica_twovav_DSFMURealOutputs[417]
						{
						 type:    flt(64,IEEE)
						 alias:   "m_flow"
						 flags:   OUTPUT|READONLY
						 range:   <-100000; 0>
						 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
						modelica_twovav_DSFMURealOutputs[418]
						{
						 type:    flt(64,IEEE)
						 alias:   "p"
						 flags:   OUTPUT|READONLY
						 range:   <0; 100000000>
						 desc:    "continuous local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
						modelica_twovav_DSFMURealOutputs[419]
						{
						 type:    flt(64,IEEE)
						 alias:   "h_outflow"
						 flags:   OUTPUT|READONLY
						 range:   <-10000000000; 10000000000>
						 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					
					endgroup -- "port_b"
					
					group "heaInp"
						modelica_twovav_DSFMURealOutputs[438]
						{
						 type:    flt(64,IEEE)
						 alias:   "y"
						 flags:   OUTPUT|READONLY
						 desc:    "continuous local: Value of Real output"
		 addr:    0x0818AF00
		}
					
					endgroup -- "heaInp"
				
				endgroup -- "bal2"
				
				group "hA"
					modelica_twovav_DSFMURealFixedParams[38]
					{
					 type:    flt(64,IEEE)
					 alias:   "T0_w"
					 flags:   PARAM|INITONLY
					 value:   293.15
					 desc:    "fixed parameter (used for initialization): Water temperature"
		 addr:    0x080B23E0
		}
					modelica_twovav_DSFMURealFixedParams[39]
					{
					 type:    flt(64,IEEE)
					 alias:   "T0_a"
					 flags:   PARAM|INITONLY
					 value:   293.15
					 desc:    "fixed parameter (used for initialization): Air temperature"
 addr:    0x080B23E0
}
					modelica_twovav_DSFMURealTunableParams[44]
					{
					 type:    flt(64,IEEE)
					 alias:   "n_w"
					 flags:   PARAM
					 range:   <0; 1>
					 value:   0.85
					 desc:    "tunable parameter: Water-side exponent for convective heat transfer coefficient, h~m_flow^n"
 addr:    0x080B2240
}
					modelica_twovav_DSFMURealTunableParams[45]
					{
					 type:    flt(64,IEEE)
					 alias:   "n_a"
					 flags:   PARAM
					 range:   <0; 1>
					 value:   0.8
					 desc:    "tunable parameter: Air-side exponent for convective heat transfer coefficient, h~m_flow^n"
		 addr:    0x080B2240
		}
					modelica_twovav_DSFMURealFixedDepParams[401]
					{
					 type:    flt(64,IEEE)
					 alias:   "s_w"
					 flags:   PARAM|READONLY
					 desc:    "fixed calculatedParameter: Coefficient for temperature dependence of water side heat transfer coefficient"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[397]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal_w"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Water mass flow rate"
			 addr:    0x080B1420
			}
					modelica_twovav_DSFMURealFixedDepParams[398]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow_nominal_a"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Air mass flow rate"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[131]
					{
					 type:    uint(8)
					 alias:   "waterSideFlowDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make water-side hA independent of mass flow rate"
 addr:    0x080B1260
}
					modelica_twovav_DSFMUBooleanFixedDepParams[132]
					{
					 type:    uint(8)
					 alias:   "airSideFlowDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make air-side hA independent of mass flow rate"
 addr:    0x080B1260
}
					modelica_twovav_DSFMUBooleanFixedDepParams[133]
					{
					 type:    uint(8)
					 alias:   "waterSideTemperatureDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make water-side hA independent of temperature"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMUBooleanFixedDepParams[134]
					{
					 type:    uint(8)
					 alias:   "airSideTemperatureDependent"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Set to false to make air-side hA independent of temperature"
		 addr:    0x080B1260
		}
					modelica_twovav_DSFMURealFixedDepParams[399]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_a"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Factor for air side temperature dependent variation of heat transfer coefficient"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[400]
					{
					 type:    flt(64,IEEE)
					 alias:   "x_w"
					 flags:   OUTPUT|READONLY
					 desc:    "constant local: Factor for water side temperature dependent variation of heat transfer coefficient"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[396]
					{
					 type:    flt(64,IEEE)
					 alias:   "UA_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "fixed local: Thermal conductance at nominal flow"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[450]
					{
					 type:    flt(64,IEEE)
					 alias:   "m2_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Mass flow rate medium 2"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[454]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_2"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Convective heat transfer medium 2"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[455]
					{
					 type:    flt(64,IEEE)
					 alias:   "r_nominal"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Ratio between air-side and water-side convective heat transfer coefficient"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[456]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_nominal_w"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Water side convective heat transfer coefficient"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[457]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_nominal_a"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Air side convective heat transfer coefficient, including fin resistance"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[459]
					{
					 type:    flt(64,IEEE)
					 alias:   "fm_a"
					 flags:   OUTPUT|READONLY
					 desc:    "tunable local: Fraction of actual to nominal mass flow rate"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[449]
					{
					 type:    flt(64,IEEE)
					 alias:   "m1_flow"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Mass flow rate medium 1"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[451]
					{
					 type:    flt(64,IEEE)
					 alias:   "T_1"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Temperature medium 1"
			 addr:    0x0818AF00
			}
					modelica_twovav_DSFMURealOutputs[452]
					{
					 type:    flt(64,IEEE)
					 alias:   "T_2"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Temperature medium 2"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[453]
					{
					 type:    flt(64,IEEE)
					 alias:   "hA_1"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Convective heat transfer medium 1"
			 addr:    0x0818AF00
			}
					modelica_twovav_DSFMURealOutputs[458]
					{
					 type:    flt(64,IEEE)
					 alias:   "fm_w"
					 flags:   OUTPUT|READONLY
					 desc:    "continuous local: Fraction of actual to nominal mass flow rate"
 addr:    0x0818AF00
}
				
				endgroup -- "hA"
				
				group "port_a2"
					modelica_twovav_DSFMURealFixedDepParams[271]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "constant local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[360]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000>
					 desc:    "tunable local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[361]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				
				endgroup -- "port_a2"
				
				group "sta1_default"
					modelica_twovav_DSFMURealFixedDepParams[381]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[382]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "constant local: Temperature of medium"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[383]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealFixedDepParams[384]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "constant local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B1420
}
				
				endgroup -- "sta1_default"
				
				group "sta2_default"
					modelica_twovav_DSFMURealFixedDepParams[385]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "constant local: Absolute pressure of medium"
 addr:    0x080B1420
}
					modelica_twovav_DSFMURealFixedDepParams[386]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "constant local: Temperature of medium"
 addr:    0x080B1420
}
				
				endgroup -- "sta2_default"
				
				group "state_b2_inflow"
					modelica_twovav_DSFMURealFixedDepParams[278]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "fixed local: Temperature of medium"
		 addr:    0x080B1420
		}
					modelica_twovav_DSFMURealOutputs[377]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
		 addr:    0x0818AF00
		}
				
				endgroup -- "state_b2_inflow"
				
				group "port_a1"
					modelica_twovav_DSFMURealOutputs[355]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[352]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 100000>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[353]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[354]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_a1"
				
				group "port_b1"
					modelica_twovav_DSFMURealOutputs[359]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[356]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[357]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[358]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				
				endgroup -- "port_b1"
				
				group "state_a1_inflow"
					modelica_twovav_DSFMURealOutputs[368]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[369]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[370]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[367]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
		 addr:    0x0818AF00
		}
				
				endgroup -- "state_a1_inflow"
				
				group "state_b1_inflow"
					modelica_twovav_DSFMURealOutputs[372]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[373]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[374]
					{
					 type:    flt(64,IEEE)
					 alias:   "X[2]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[371]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
 addr:    0x0818AF00
}
				
				endgroup -- "state_b1_inflow"
				
				group "state_a2_inflow"
					modelica_twovav_DSFMURealOutputs[376]
					{
					 type:    flt(64,IEEE)
					 alias:   "T"
					 flags:   OUTPUT|READONLY
					 range:   <1; 10000>
					 desc:    "tunable local: Temperature of medium"
			 addr:    0x0818AF00
			}
					modelica_twovav_DSFMURealOutputs[375]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Absolute pressure of medium"
		 addr:    0x0818AF00
		}
				
				endgroup -- "state_a2_inflow"
				
				group "port_b2"
					modelica_twovav_DSFMURealOutputs[362]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 0>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[363]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[364]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
				 addr:    0x0818AF00
				}
				
				endgroup -- "port_b2"
			
			endgroup -- "terHea"
			
			group "sinTer"
				modelica_twovav_DSFMURealFixedParams[40]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   PARAM|INITONLY
				 range:   <0; 100000000>
				 value:   300000
				 desc:    "fixed parameter (used for initialization): Fixed value of pressure"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealFixedParams[41]
				{
				 type:    flt(64,IEEE)
				 alias:   "T"
				 flags:   PARAM|INITONLY
				 range:   <1; 10000>
				 value:   293.15
				 desc:    "fixed parameter (used for initialization): Fixed value of temperature"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealTunableParams[46]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[1]"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   1
				 desc:    "tunable parameter: Fixed value of composition"
 addr:    0x080B2240
}
				modelica_twovav_DSFMUIntegerFixedDepParams[62]
				{
				 type:    int(32)
				 alias:   "nPorts"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Number of ports"
			 addr:    0x080B1300
			}
				modelica_twovav_DSFMUBooleanFixedDepParams[135]
				{
				 type:    uint(8)
				 alias:   "verifyInputs"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to stop the simulation with an error if the medium temperature is outside its allowable range"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUIntegerFixedDepParams[63]
				{
				 type:    enum EnumDT5
				 alias:   "flowDirection"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Allowed flow direction"
			 addr:    0x080B1300
			}
				modelica_twovav_DSFMUBooleanFixedDepParams[136]
				{
				 type:    uint(8)
				 alias:   "checkWaterPressure"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Evaluates to true if the pressure should be checked"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMUBooleanFixedDepParams[137]
				{
				 type:    uint(8)
				 alias:   "checkAirPressure"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Evaluates to true if the pressure should be checked"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[403]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "fixed local: Needed to connect to conditional connector"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealOutputs[463]
				{
				 type:    flt(64,IEEE)
				 alias:   "X_in_internal[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[462]
				{
				 type:    flt(64,IEEE)
				 alias:   "p_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[464]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Internal connector for enthalpy"
 addr:    0x0818AF00
}
				
				group "ports[1]"
					modelica_twovav_DSFMURealFixedDepParams[402]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "fixed local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x080B1420
			}
					modelica_twovav_DSFMURealOutputs[460]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 1E+60>
					 desc:    "tunable local: Mass flow rate from the connection point into the component"
				 addr:    0x0818AF00
				}
					modelica_twovav_DSFMURealOutputs[461]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
				 addr:    0x0818AF00
				}
				
				endgroup -- "ports[1]"
			
			endgroup -- "sinTer"
			
			group "souTer"
				modelica_twovav_DSFMURealFixedParams[42]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   PARAM|INITONLY
				 value:   0
				 desc:    "fixed parameter (used for initialization): Fixed mass flow rate going out of the fluid port"
				 addr:    0x080B23E0
				}
				modelica_twovav_DSFMURealTunableParams[47]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[1]"
				 flags:   PARAM
				 range:   <0; 1>
				 value:   1
				 desc:    "tunable parameter: Fixed value of composition"
 addr:    0x080B2240
}
				modelica_twovav_DSFMURealTunableParams[48]
				{
				 type:    flt(64,IEEE)
				 alias:   "T"
				 flags:   PARAM
				 range:   <1; 10000>
				 value:   323.15
				 desc:    "tunable parameter: Fixed value of temperature"
			 addr:    0x080B2240
			}
				modelica_twovav_DSFMUIntegerFixedDepParams[64]
				{
				 type:    int(32)
				 alias:   "nPorts"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Number of ports"
				 addr:    0x080B1300
				}
				modelica_twovav_DSFMUBooleanFixedDepParams[139]
				{
				 type:    uint(8)
				 alias:   "verifyInputs"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: Set to true to stop the simulation with an error if the medium temperature is outside its allowable range"
			 addr:    0x080B1260
			}
				modelica_twovav_DSFMUIntegerFixedDepParams[65]
				{
				 type:    enum EnumDT5
				 alias:   "flowDirection"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Allowed flow direction"
 addr:    0x080B1300
}
				modelica_twovav_DSFMURealOutputs[491]
				{
				 type:    flt(64,IEEE)
				 alias:   "X_in_internal[1]"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[492]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_in"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Prescribed mass flow rate"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[493]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[494]
				{
				 type:    flt(64,IEEE)
				 alias:   "T_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[490]
				{
				 type:    flt(64,IEEE)
				 alias:   "p_in_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[495]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_internal"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Internal connector for enthalpy"
		 addr:    0x0818AF00
		}
				
				group "ports[1]"
					modelica_twovav_DSFMURealOutputs[489]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[487]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[488]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				
				endgroup -- "ports[1]"
			
			endgroup -- "souTer"
			
			group "senMasFlo"
				modelica_twovav_DSFMUBooleanFixedDepParams[138]
				{
				 type:    uint(8)
				 alias:   "allowFlowReversal"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
				modelica_twovav_DSFMURealFixedDepParams[404]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_nominal"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Nominal mass flow rate, used for regularization near zero flow"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealFixedDepParams[405]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow_small"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required)"
 addr:    0x080B1420
}
				modelica_twovav_DSFMURealOutputs[481]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Mass flow rate from port_a to port_b"
 addr:    0x0818AF00
}
				
				group "port_a"
					modelica_twovav_DSFMURealOutputs[474]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[475]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[476]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[473]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-1E+60; 100000>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
			 addr:    0x0818AF00
			}
				
				endgroup -- "port_a"
				
				group "port_b"
					modelica_twovav_DSFMURealOutputs[478]
					{
					 type:    flt(64,IEEE)
					 alias:   "p"
					 flags:   OUTPUT|READONLY
					 range:   <0; 100000000>
					 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[480]
					{
					 type:    flt(64,IEEE)
					 alias:   "Xi_outflow[1]"
					 flags:   OUTPUT|READONLY
					 range:   <0; 1>
					 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
					modelica_twovav_DSFMURealOutputs[477]
					{
					 type:    flt(64,IEEE)
					 alias:   "m_flow"
					 flags:   OUTPUT|READONLY
					 range:   <-100000; 1E+60>
					 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
					modelica_twovav_DSFMURealOutputs[479]
					{
					 type:    flt(64,IEEE)
					 alias:   "h_outflow"
					 flags:   OUTPUT|READONLY
					 range:   <-10000000000; 10000000000>
					 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				
				endgroup -- "port_b"
			
			endgroup -- "senMasFlo"
			
			group "fraMasFlo"
				modelica_twovav_DSFMURealFixedDepParams[406]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Gain value multiplied with input signal"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealOutputs[482]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Input signal connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[483]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output signal connector"
		 addr:    0x0818AF00
		}
			
			endgroup -- "fraMasFlo"
			
			group "gaiM_flow"
				modelica_twovav_DSFMURealFixedDepParams[407]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "constant local: Gain value multiplied with input signal"
		 addr:    0x080B1420
		}
				modelica_twovav_DSFMURealOutputs[498]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Input signal connector"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[499]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output signal connector"
 addr:    0x0818AF00
}
			
			endgroup -- "gaiM_flow"
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[468]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[465]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[466]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[467]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[470]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
				 addr:    0x0818AF00
				}
				modelica_twovav_DSFMURealOutputs[472]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[469]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[471]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
			
			endgroup -- "port_b"
			
			group "ACH"
				modelica_twovav_DSFMURealOutputs[484]
				{
				 type:    flt(64,IEEE)
				 alias:   "k"
				 flags:   OUTPUT|READONLY
				 desc:    "tunable local: Gain value multiplied with input signal"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[485]
				{
				 type:    flt(64,IEEE)
				 alias:   "u"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Input signal connector"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[486]
				{
				 type:    flt(64,IEEE)
				 alias:   "y"
				 flags:   OUTPUT|READONLY
				 desc:    "continuous local: Output signal connector"
 addr:    0x0818AF00
}
			
			endgroup -- "ACH"
		
		endgroup -- "vav2"
		
		group "coiSou"
			modelica_twovav_DSFMURealFixedParams[43]
			{
			 type:    flt(64,IEEE)
			 alias:   "X[2]"
			 flags:   PARAM|INITONLY
			 range:   <0; 1>
			 value:   0.99
			 desc:    "fixed parameter (used for initialization): Fixed value of composition"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMURealTunableParams[49]
			{
			 type:    flt(64,IEEE)
			 alias:   "X[1]"
			 flags:   PARAM
			 range:   <0; 1>
			 value:   0.01
			 desc:    "tunable parameter: Fixed value of composition"
 addr:    0x080B2240
}
			modelica_twovav_DSFMURealTunableParams[50]
			{
			 type:    flt(64,IEEE)
			 alias:   "T"
			 flags:   PARAM
			 range:   <1; 10000>
			 value:   285.15
			 desc:    "tunable parameter: Fixed value of temperature"
 addr:    0x080B2240
}
			modelica_twovav_DSFMUIntegerFixedDepParams[66]
			{
			 type:    int(32)
			 alias:   "nPorts"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Number of ports"
 addr:    0x080B1300
}
			modelica_twovav_DSFMUBooleanFixedDepParams[140]
			{
			 type:    uint(8)
			 alias:   "verifyInputs"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: Set to true to stop the simulation with an error if the medium temperature is outside its allowable range"
 addr:    0x080B1260
}
			modelica_twovav_DSFMUIntegerFixedDepParams[67]
			{
			 type:    enum EnumDT5
			 alias:   "flowDirection"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Allowed flow direction"
		 addr:    0x080B1300
		}
			modelica_twovav_DSFMURealFixedDepParams[409]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Fixed mass flow rate going out of the fluid port"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMURealFixedDepParams[410]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_in_internal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Needed to connect to conditional connector"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMURealFixedDepParams[408]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_in_internal[2]"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Needed to connect to conditional connector"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealOutputs[514]
			{
			 type:    flt(64,IEEE)
			 alias:   "Xi_in_internal[1]"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[515]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_in_internal[1]"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[516]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_in_internal"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Needed to connect to conditional connector"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[513]
			{
			 type:    flt(64,IEEE)
			 alias:   "p_in_internal"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Needed to connect to conditional connector"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[517]
			{
			 type:    flt(64,IEEE)
			 alias:   "h_internal"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Internal connector for enthalpy"
 addr:    0x0818AF00
}
			
			group "ports[1]"
				modelica_twovav_DSFMURealOutputs[503]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[504]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[501]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[502]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
			
			endgroup -- "ports[1]"
			
			group "ports[2]"
				modelica_twovav_DSFMURealOutputs[507]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[508]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[505]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[506]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "continuous local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
			
			endgroup -- "ports[2]"
			
			group "ports[3]"
				modelica_twovav_DSFMURealOutputs[511]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[512]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[509]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[510]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "continuous local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
			
			endgroup -- "ports[3]"
		
		endgroup -- "coiSou"
		
		group "byp"
			modelica_twovav_DSFMUBooleanFixedDepParams[141]
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
			 addr:    0x080B1260
			}
			modelica_twovav_DSFMURealFixedDepParams[411]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Nominal mass flow rate"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[412]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_small"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Small mass flow rate for regularization of zero flow"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMUBooleanFixedDepParams[142]
			{
			 type:    uint(8)
			 alias:   "show_T"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = true, if actual temperature at port is computed"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[413]
			{
			 type:    flt(64,IEEE)
			 alias:   "_m_flow_start"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[414]
			{
			 type:    flt(64,IEEE)
			 alias:   "_dp_start"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMUBooleanFixedDepParams[143]
			{
			 type:    uint(8)
			 alias:   "from_dp"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = true, use m_flow = f(dp) else dp = f(m_flow)"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[415]
			{
			 type:    flt(64,IEEE)
			 alias:   "dp_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Pressure drop at nominal mass flow rate"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMUBooleanFixedDepParams[144]
			{
			 type:    uint(8)
			 alias:   "linearized"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = true, use linear relation between m_flow and dp for any flow rate"
 addr:    0x080B1260
}
			modelica_twovav_DSFMURealFixedDepParams[416]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_turbulent"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Turbulent flow if |m_flow| >= m_flow_turbulent"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[418]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal_pos"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Absolute value of nominal flow rate"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[419]
			{
			 type:    flt(64,IEEE)
			 alias:   "dp_nominal_pos"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Absolute value of nominal pressure difference"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[420]
			{
			 type:    flt(64,IEEE)
			 alias:   "deltaM"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Fraction of nominal mass flow rate where transition to turbulent occurs"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[421]
			{
			 type:    flt(64,IEEE)
			 alias:   "k"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMUBooleanFixedDepParams[145]
			{
			 type:    uint(8)
			 alias:   "computeFlowResistance"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: Flag to enable/disable computation of flow resistance"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[422]
			{
			 type:    flt(64,IEEE)
			 alias:   "coeff"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Precomputed coefficient to avoid division by parameter"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[417]
			{
			 type:    flt(64,IEEE)
			 alias:   "eta_default"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Dynamic viscosity, used to compute transition to turbulent flow regime"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealOutputs[526]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction)"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[527]
			{
			 type:    flt(64,IEEE)
			 alias:   "dp"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Pressure difference between port_a and port_b"
		 addr:    0x0818AF00
		}
			
			group "sta_default"
				modelica_twovav_DSFMURealFixedParams[44]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   PARAM|INITONLY
				 range:   <0; 100000000>
				 value:   101325
				 desc:    "fixed parameter (used for initialization): Absolute pressure of medium"
		 addr:    0x080B23E0
		}
				modelica_twovav_DSFMURealFixedParams[45]
				{
				 type:    flt(64,IEEE)
				 alias:   "T"
				 flags:   PARAM|INITONLY
				 range:   <1; 10000>
				 value:   293.15
				 desc:    "fixed parameter (used for initialization): Temperature of medium"
		 addr:    0x080B23E0
		}
				modelica_twovav_DSFMURealFixedParams[46]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[1]"
				 flags:   PARAM|INITONLY
				 range:   <0; 1>
				 value:   0.01
				 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
 addr:    0x080B23E0
}
				modelica_twovav_DSFMURealFixedParams[47]
				{
				 type:    flt(64,IEEE)
				 alias:   "X[2]"
				 flags:   PARAM|INITONLY
				 range:   <0; 1>
				 value:   0.99
				 desc:    "fixed parameter (used for initialization): Mass fractions (= (component mass)/total mass  m_i/m)"
		 addr:    0x080B23E0
		}
			
			endgroup -- "sta_default"
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[520]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[521]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[518]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[519]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "continuous local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[523]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[524]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[525]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[522]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
			
			endgroup -- "port_b"
		
		endgroup -- "byp"
		
		group "VSup2"
			modelica_twovav_DSFMURealFixedParams[48]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_start"
			 flags:   PARAM|INITONLY
			 value:   293.15
			 desc:    "fixed parameter (used for initialization): Temperature used to compute d_start"
			 addr:    0x080B23E0
			}
			modelica_twovav_DSFMURealFixedParams[49]
			{
			 type:    flt(64,IEEE)
			 alias:   "p_start"
			 flags:   PARAM|INITONLY
			 value:   101325
			 desc:    "fixed parameter (used for initialization): Pressure used to compute d_start"
		 addr:    0x080B23E0
		}
			modelica_twovav_DSFMURealFixedParams[50]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_start[1]"
			 flags:   PARAM|INITONLY
			 value:   0.01
			 desc:    "fixed parameter (used for initialization): Mass fraction used to compute d_start"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMURealFixedParams[51]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_start[2]"
			 flags:   PARAM|INITONLY
			 value:   0.99
			 desc:    "fixed parameter (used for initialization): Mass fraction used to compute d_start"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMUBooleanFixedDepParams[146]
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
			 addr:    0x080B1260
			}
			modelica_twovav_DSFMURealFixedDepParams[423]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Nominal mass flow rate, used for regularization near zero flow"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[424]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_small"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required)"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[425]
			{
			 type:    flt(64,IEEE)
			 alias:   "tau"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems)"
 addr:    0x080B1420
}
			modelica_twovav_DSFMUIntegerFixedDepParams[68]
			{
			 type:    enum EnumDT1
			 alias:   "initType"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Type of initialization (InitialState and InitialOutput are identical)"
			 addr:    0x080B1300
			}
			modelica_twovav_DSFMUBooleanFixedDepParams[147]
			{
			 type:    uint(8)
			 alias:   "dynamic"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: Flag, true if the sensor is a dynamic sensor"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[426]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauInv"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Inverse of tau"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMURealFixedDepParams[427]
			{
			 type:    flt(64,IEEE)
			 alias:   "d_start"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "fixed local: Initial or guess value of density"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealOutputs[540]
			{
			 type:    flt(64,IEEE)
			 alias:   "d_a_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "tunable local: Density of inflowing fluid at port_a"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[541]
			{
			 type:    flt(64,IEEE)
			 alias:   "d_b_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "tunable local: Density of inflowing fluid at port_b, or rho_a_inflow if uni-directional flow"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[536]
			{
			 type:    flt(64,IEEE)
			 alias:   "k"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Gain to take flow rate into account for sensor time constant"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[537]
			{
			 type:    flt(64,IEEE)
			 alias:   "mNor_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Normalized mass flow rate"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[538]
			{
			 type:    flt(64,IEEE)
			 alias:   "V_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Volume flow rate from port_a to port_b"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[539]
			{
			 type:    flt(64,IEEE)
			 alias:   "dMed"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "continuous local: Medium temperature to which the sensor is exposed"
			 addr:    0x0818AF00
			}
			modelica_twovav_DSFMURealOutputs[542]
			{
			 type:    flt(64,IEEE)
			 alias:   "d"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "continuous local: Density of the passing fluid"
			 addr:    0x0818AF00
			}
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[529]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[530]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[531]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[528]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
			 addr:    0x0818AF00
			}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[533]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[535]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[532]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[534]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
			
			endgroup -- "port_b"
		
		endgroup -- "VSup2"
		
		group "VSup1"
			modelica_twovav_DSFMURealFixedParams[52]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_start"
			 flags:   PARAM|INITONLY
			 value:   293.15
			 desc:    "fixed parameter (used for initialization): Temperature used to compute d_start"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMURealFixedParams[53]
			{
			 type:    flt(64,IEEE)
			 alias:   "p_start"
			 flags:   PARAM|INITONLY
			 value:   101325
			 desc:    "fixed parameter (used for initialization): Pressure used to compute d_start"
		 addr:    0x080B23E0
		}
			modelica_twovav_DSFMURealFixedParams[54]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_start[1]"
			 flags:   PARAM|INITONLY
			 value:   0.01
			 desc:    "fixed parameter (used for initialization): Mass fraction used to compute d_start"
		 addr:    0x080B23E0
		}
			modelica_twovav_DSFMURealFixedParams[55]
			{
			 type:    flt(64,IEEE)
			 alias:   "X_start[2]"
			 flags:   PARAM|INITONLY
			 value:   0.99
			 desc:    "fixed parameter (used for initialization): Mass fraction used to compute d_start"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMUBooleanFixedDepParams[148]
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
			 addr:    0x080B1260
			}
			modelica_twovav_DSFMURealFixedDepParams[428]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Nominal mass flow rate, used for regularization near zero flow"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMURealFixedDepParams[429]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_small"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required)"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[430]
			{
			 type:    flt(64,IEEE)
			 alias:   "tau"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems)"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMUIntegerFixedDepParams[69]
			{
			 type:    enum EnumDT1
			 alias:   "initType"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Type of initialization (InitialState and InitialOutput are identical)"
 addr:    0x080B1300
}
			modelica_twovav_DSFMUBooleanFixedDepParams[149]
			{
			 type:    uint(8)
			 alias:   "dynamic"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: Flag, true if the sensor is a dynamic sensor"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[431]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauInv"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Inverse of tau"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[432]
			{
			 type:    flt(64,IEEE)
			 alias:   "d_start"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "fixed local: Initial or guess value of density"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealOutputs[556]
			{
			 type:    flt(64,IEEE)
			 alias:   "d_a_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "tunable local: Density of inflowing fluid at port_a"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[557]
			{
			 type:    flt(64,IEEE)
			 alias:   "d_b_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "tunable local: Density of inflowing fluid at port_b, or rho_a_inflow if uni-directional flow"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[552]
			{
			 type:    flt(64,IEEE)
			 alias:   "k"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Gain to take flow rate into account for sensor time constant"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[553]
			{
			 type:    flt(64,IEEE)
			 alias:   "mNor_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Normalized mass flow rate"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[554]
			{
			 type:    flt(64,IEEE)
			 alias:   "V_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Volume flow rate from port_a to port_b"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[555]
			{
			 type:    flt(64,IEEE)
			 alias:   "dMed"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "continuous local: Medium temperature to which the sensor is exposed"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[558]
			{
			 type:    flt(64,IEEE)
			 alias:   "d"
			 flags:   OUTPUT|READONLY
			 range:   <0; 100000>
			 desc:    "continuous local: Density of the passing fluid"
 addr:    0x0818AF00
}
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[545]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[546]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[547]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[544]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[549]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[551]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[548]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[550]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
			
			endgroup -- "port_b"
		
		endgroup -- "VSup1"
		
		group "TDisVAV1"
			modelica_twovav_DSFMURealFixedParams[56]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_start"
			 flags:   PARAM|INITONLY
			 value:   293.15
			 desc:    "fixed parameter (used for initialization): Initial or guess value of output (= state)"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMURealFixedParams[57]
			{
			 type:    flt(64,IEEE)
			 alias:   "TAmb"
			 flags:   PARAM|INITONLY
			 value:   293.15
			 desc:    "fixed parameter (used for initialization): Fixed ambient temperature for heat transfer"
		 addr:    0x080B23E0
		}
			modelica_twovav_DSFMURealFixedParams[58]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauHeaTra"
			 flags:   PARAM|INITONLY
			 value:   1200
			 desc:    "fixed parameter (used for initialization): Time constant for heat transfer, default 20 minutes"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMUBooleanFixedDepParams[150]
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[433]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Nominal mass flow rate, used for regularization near zero flow"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[434]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_small"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required)"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[435]
			{
			 type:    flt(64,IEEE)
			 alias:   "tau"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems)"
 addr:    0x080B1420
}
			modelica_twovav_DSFMUIntegerFixedDepParams[70]
			{
			 type:    enum EnumDT1
			 alias:   "initType"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Type of initialization (InitialState and InitialOutput are identical)"
		 addr:    0x080B1300
		}
			modelica_twovav_DSFMUBooleanFixedDepParams[151]
			{
			 type:    uint(8)
			 alias:   "dynamic"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: Flag, true if the sensor is a dynamic sensor"
 addr:    0x080B1260
}
			modelica_twovav_DSFMURealFixedDepParams[436]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauInv"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Inverse of tau"
 addr:    0x080B1420
}
			modelica_twovav_DSFMUBooleanFixedDepParams[152]
			{
			 type:    uint(8)
			 alias:   "transferHeat"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: if true, temperature T converges towards TAmb when no flow"
			 addr:    0x080B1260
			}
			modelica_twovav_DSFMURealFixedDepParams[437]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauHeaTraInv"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Dummy parameter to avoid division by tauHeaTra"
			 addr:    0x080B1420
			}
			modelica_twovav_DSFMURealFixedDepParams[438]
			{
			 type:    flt(64,IEEE)
			 alias:   "ratTau"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Ratio of tau"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealOutputs[576]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_b_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <1; 10000>
			 desc:    "tunable local: Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow"
		 addr:    0x0818AF00
		}
			modelica_twovav_DSFMURealOutputs[570]
			{
			 type:    flt(64,IEEE)
			 alias:   "k"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Gain to take flow rate into account for sensor time constant"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[571]
			{
			 type:    flt(64,IEEE)
			 alias:   "mNor_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Normalized mass flow rate"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[572]
			{
			 type:    flt(64,IEEE)
			 alias:   "T"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Temperature of the passing fluid"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[574]
			{
			 type:    flt(64,IEEE)
			 alias:   "TMed"
			 flags:   OUTPUT|READONLY
			 range:   <1; 10000>
			 desc:    "continuous local: Medium temperature to which the sensor is exposed"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[575]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_a_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <1; 10000>
			 desc:    "continuous local: Temperature of inflowing fluid at port_a"
 addr:    0x0818AF00
}
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[563]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[564]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[565]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[562]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
			 addr:    0x0818AF00
			}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[567]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[569]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[566]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[568]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
			
			endgroup -- "port_b"
		
		endgroup -- "TDisVAV1"
		
		group "TDisVAV2"
			modelica_twovav_DSFMURealFixedParams[59]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_start"
			 flags:   PARAM|INITONLY
			 value:   293.15
			 desc:    "fixed parameter (used for initialization): Initial or guess value of output (= state)"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMURealFixedParams[60]
			{
			 type:    flt(64,IEEE)
			 alias:   "TAmb"
			 flags:   PARAM|INITONLY
			 value:   293.15
			 desc:    "fixed parameter (used for initialization): Fixed ambient temperature for heat transfer"
		 addr:    0x080B23E0
		}
			modelica_twovav_DSFMURealFixedParams[61]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauHeaTra"
			 flags:   PARAM|INITONLY
			 value:   1200
			 desc:    "fixed parameter (used for initialization): Time constant for heat transfer, default 20 minutes"
 addr:    0x080B23E0
}
			modelica_twovav_DSFMUBooleanFixedDepParams[153]
			{
			 type:    uint(8)
			 alias:   "allowFlowReversal"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: = false to simplify equations, assuming, but not enforcing, no flow reversal"
			 addr:    0x080B1260
			}
			modelica_twovav_DSFMURealFixedDepParams[439]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_nominal"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Nominal mass flow rate, used for regularization near zero flow"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[440]
			{
			 type:    flt(64,IEEE)
			 alias:   "m_flow_small"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required)"
 addr:    0x080B1420
}
			modelica_twovav_DSFMURealFixedDepParams[441]
			{
			 type:    flt(64,IEEE)
			 alias:   "tau"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems)"
 addr:    0x080B1420
}
			modelica_twovav_DSFMUIntegerFixedDepParams[71]
			{
			 type:    enum EnumDT1
			 alias:   "initType"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Type of initialization (InitialState and InitialOutput are identical)"
		 addr:    0x080B1300
		}
			modelica_twovav_DSFMUBooleanFixedDepParams[154]
			{
			 type:    uint(8)
			 alias:   "dynamic"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: Flag, true if the sensor is a dynamic sensor"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[442]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauInv"
			 flags:   OUTPUT|READONLY
			 desc:    "constant local: Inverse of tau"
 addr:    0x080B1420
}
			modelica_twovav_DSFMUBooleanFixedDepParams[155]
			{
			 type:    uint(8)
			 alias:   "transferHeat"
			 flags:   OUTPUT|READONLY
			 range:   <0; 1>
			 desc:    "constant local: if true, temperature T converges towards TAmb when no flow"
		 addr:    0x080B1260
		}
			modelica_twovav_DSFMURealFixedDepParams[443]
			{
			 type:    flt(64,IEEE)
			 alias:   "tauHeaTraInv"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Dummy parameter to avoid division by tauHeaTra"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealFixedDepParams[444]
			{
			 type:    flt(64,IEEE)
			 alias:   "ratTau"
			 flags:   OUTPUT|READONLY
			 desc:    "fixed local: Ratio of tau"
		 addr:    0x080B1420
		}
			modelica_twovav_DSFMURealOutputs[591]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_b_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <1; 10000>
			 desc:    "tunable local: Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[585]
			{
			 type:    flt(64,IEEE)
			 alias:   "k"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Gain to take flow rate into account for sensor time constant"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[586]
			{
			 type:    flt(64,IEEE)
			 alias:   "mNor_flow"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Normalized mass flow rate"
 addr:    0x0818AF00
}
			modelica_twovav_DSFMURealOutputs[587]
			{
			 type:    flt(64,IEEE)
			 alias:   "T"
			 flags:   OUTPUT|READONLY
			 desc:    "continuous local: Temperature of the passing fluid"
			 addr:    0x0818AF00
			}
			modelica_twovav_DSFMURealOutputs[589]
			{
			 type:    flt(64,IEEE)
			 alias:   "TMed"
			 flags:   OUTPUT|READONLY
			 range:   <1; 10000>
			 desc:    "continuous local: Medium temperature to which the sensor is exposed"
			 addr:    0x0818AF00
			}
			modelica_twovav_DSFMURealOutputs[590]
			{
			 type:    flt(64,IEEE)
			 alias:   "T_a_inflow"
			 flags:   OUTPUT|READONLY
			 range:   <1; 10000>
			 desc:    "continuous local: Temperature of inflowing fluid at port_a"
		 addr:    0x0818AF00
		}
			
			group "port_a"
				modelica_twovav_DSFMURealOutputs[578]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[579]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "tunable local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[580]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
			 addr:    0x0818AF00
			}
				modelica_twovav_DSFMURealOutputs[577]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-1E+60; 100000>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
			
			endgroup -- "port_a"
			
			group "port_b"
				modelica_twovav_DSFMURealOutputs[582]
				{
				 type:    flt(64,IEEE)
				 alias:   "p"
				 flags:   OUTPUT|READONLY
				 range:   <0; 100000000>
				 desc:    "tunable local: Thermodynamic pressure in the connection point"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[584]
				{
				 type:    flt(64,IEEE)
				 alias:   "Xi_outflow[1]"
				 flags:   OUTPUT|READONLY
				 range:   <0; 1>
				 desc:    "tunable local: Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0"
		 addr:    0x0818AF00
		}
				modelica_twovav_DSFMURealOutputs[581]
				{
				 type:    flt(64,IEEE)
				 alias:   "m_flow"
				 flags:   OUTPUT|READONLY
				 range:   <-100000; 1E+60>
				 desc:    "continuous local: Mass flow rate from the connection point into the component"
 addr:    0x0818AF00
}
				modelica_twovav_DSFMURealOutputs[583]
				{
				 type:    flt(64,IEEE)
				 alias:   "h_outflow"
				 flags:   OUTPUT|READONLY
				 range:   <-10000000000; 10000000000>
				 desc:    "continuous local: Specific thermodynamic enthalpy close to the connection point if m_flow < 0"
 addr:    0x0818AF00
}
			
			endgroup -- "port_b"
		
		endgroup -- "TDisVAV2"
		
		group "zer"
			modelica_twovav_DSFMURealTunableParams[23]
			{
			 type:    flt(64,IEEE)
			 alias:   "k"
			 flags:   PARAM
			 value:   0
			 desc:    "tunable parameter: Constant output value"
		 addr:    0x080B2240
		}
			modelica_twovav_DSFMURealOutputs[233]
			{
			 type:    flt(64,IEEE)
			 alias:   "y"
			 flags:   OUTPUT|READONLY
			 desc:    "tunable local: Connector of Real output signal"
		 addr:    0x0818AF00
		}
		
		endgroup -- "zer"
		
		group "_GlobalScope"
			
			group "Modelica"
				
				group "Media"
					
					group "Interfaces"
						
						group "PartialMixtureMedium"
							modelica_twovav_DSFMURealFixedDepParams[445]
							{
							 type:    flt(64,IEEE)
							 alias:   "X_default[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Default value for mass fractions of medium (for initialization)"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[446]
							{
							 type:    flt(64,IEEE)
							 alias:   "X_default[2]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Default value for mass fractions of medium (for initialization)"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[447]
							{
							 type:    flt(64,IEEE)
							 alias:   "X_default_Unique27[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Default value for mass fractions of medium (for initialization)"
 addr:    0x080B1420
}
							modelica_twovav_DSFMURealFixedDepParams[448]
							{
							 type:    flt(64,IEEE)
							 alias:   "X_default_Unique27[2]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Default value for mass fractions of medium (for initialization)"
 addr:    0x080B1420
}
						
						endgroup -- "PartialMixtureMedium"
						
						group "PartialPureSubstance"
							modelica_twovav_DSFMURealFixedDepParams[449]
							{
							 type:    flt(64,IEEE)
							 alias:   "X_default[1]"
							 flags:   OUTPUT|READONLY
							 range:   <0; 1>
							 desc:    "constant local: Default value for mass fractions of medium (for initialization)"
							 addr:    0x080B1420
							}
						
						endgroup -- "PartialPureSubstance"
					
					endgroup -- "Interfaces"
				
				endgroup -- "Media"
			
			endgroup -- "Modelica"
		
		endgroup -- "_GlobalScope"
	
	endgroup -- "Model Root"


-- ******** Diagnostics variables *********************************************

group "Diagnostics"
	pFuseActualStatus
	{
	 type:    uint(32)*
	 alias:   "Fuse Actual Status"
	 flags:   OUTPUT|READONLY
	 range:   <0; 1>
	 desc:    "0 = all fuses are intact, 1 = at least one fuse is open"
 addr:    0x0818AE28
}
	pFuseRestoreRequest
	{
	 type:    uint(32)*
	 alias:   "Fuse Restore Request"
	 flags:   PARAM
	 range:   <0; 1>
	 value:   0
	 desc:    "If set to 1 all fuses are restored"
	 addr:    0x0818AE24
	}
	
	group "Failure Simulation"
		pFailureSimulationClientConnected
		{
		 type:    uint(8)*
		 alias:   "Client connected"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure simulation client connected, 1 = Connection to a failure simulation client established"
		 addr:    0x0818AE20
		}
		pFailureSimulationFailureConfigured
		{
		 type:    uint(8)*
		 alias:   "Failure configured"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure configured, 1 = Failure configured"
		 addr:    0x0818AE1C
		}
		pFailureSimulationFailureActivated
		{
		 type:    uint(8)*
		 alias:   "Failure activated"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = No failure active, 1 = Failure active"
 addr:    0x0818AE18
}
		pFailureSimulationSequenceCount
		{
		 type:    uint(16)*
		 alias:   "Failure sequence count"
		 flags:   OUTPUT|READONLY
		 range:   <0; 65535>
		 desc:    "0 = No failure configured, 1..65535 = Failure sequence n is currently active"
		 addr:    0x0818AE14
		}
		pFailureSimulationRelaySwitching
		{
		 type:    uint(8)*
		 alias:   "Relay switching"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 = Failure simulation system is stable, 1 = Failure simulation system is currently busy. Relay switching in process"
	 addr:    0x0818AE10
	}
	
	endgroup -- "Failure Simulation"

endgroup -- "Diagnostics"

-- ******** XIL API variables *************************************************

group "XIL API"
	
	group "EESPort"
		pXilApiEesPortActiveErrorSet
		{
		 type:    uint(32)*
		 alias:   "Active ErrorSet"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    "Index of active ErrorSet or 0 if no ErrorSet is active."
		 addr:    0x0818AE0C
		}
		pXilApiEesPortErrorActivated
		{
		 type:    uint(32)*
		 alias:   "Error Activated"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 - no error is activated on hardware, 1 - at least one error is activated on hardware"
 addr:    0x0818AE08
}
		pXilApiEesPortErrorSwitching
		{
		 type:    uint(32)*
		 alias:   "Error Switching"
		 flags:   OUTPUT|READONLY
		 range:   <0; 1>
		 desc:    "0 - no switching operation running on hardware, 1 - switching operation running on hardware"
		 addr:    0x0818AE04
		}
		xilApiEesPortFlags
		{
		 type:    uint(32)
		 alias:   "Flags"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    ""
 addr:    0x0818AE00
}
		xilApiEesPortTrigger
		{
		 type:    uint(32)
		 alias:   "Trigger"
		 flags:   OUTPUT|READONLY
		 range:   <0; 4294967295>
		 desc:    ""
		 addr:    0x0818ADFC
		}
	
	endgroup -- "EESPort"

endgroup -- "XIL API"

-- ******** [EOF] *************************************************************


/****************************************************************************\ 
 *** 
 *** File                  : IOCode_Data.h
 *** 
 *** Generated by dSPACE Tools.
 *** (c) Copyright 2013, dSPACE GmbH. All rights reserved.
\****************************************************************************/

#if !defined(IOCODE_DATA_H_)
#  define    IOCODE_DATA_H_


/* -- Include directives. -- */
#  include <DsTypes.h>
#  include <cstring>
#  include <DsApplicationInterface.h>
#  include "DsIoFuncAnalogOut.h"

#  if defined(EXTERN_C_DECL)
#    undef EXTERN_C_DECL
#  endif
#  if defined(__cplusplus)
#    define EXTERN_C_DECL extern "C"
#  else
#    define EXTERN_C_DECL extern
#  endif


/* -- Defines and directives in global scope. After include directives. -- */
#define VOLTAGEOUT_1_VOLTAGE_OUT DS_IO_MAP(g_ResourceMap, 0)

/* -- Global type definitions. -- */
DS_DECLARE_IO_RESOURCES(g_ResourceMap,1)
/* -- Global variable declarations. -- */
EXTERN_C_DECL DsTErrorList ErrorList;
EXTERN_C_DECL DsCIoFuncAnalogOut * py_DriverHandle;
extern DsCFcnModule *ds_modelica_constant_fcnModule_SIDRoot_TID1;
/* -- Global helper functions. -- */
template <class T, class U>
U* ConvertScalarToVector(T oldValue, int newSize, U* vector)
{
vector[0] = (U) oldValue;
for (int i = 1; i < newSize; i++)
{
vector[i] = 0;
}
return vector;
}
template <class T, class U>
U* ConvertVectorToVector(T* oldValue, int oldSize, int newSize, U* vector)
{
int limit = newSize;
if (oldSize < limit) limit = oldSize;
for (int i = 0; i < limit; i++)
{
vector[i] = (U) oldValue[i];
}
for (int i = limit; i < newSize; i++)
{
vector[i] = 0;
}
return vector;
}

#endif                                 /* IOCODE_DATA_H_ */
/* [EOF] */
